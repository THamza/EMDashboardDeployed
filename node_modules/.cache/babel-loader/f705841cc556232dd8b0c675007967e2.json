{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GoogleMap = require('./GoogleMap');\n\nvar _GoogleMap2 = _interopRequireDefault(_GoogleMap);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\r\n * REACT LOCATION PICKER\r\n */\n\n\nvar google = window.google;\n/* Default configuration */\n\nvar DEFAULT_RADIUS = 1000;\nvar DEFAULT_ZOOM = 10;\n/* Circle options */\n// https://developers.google.com/maps/documentation/javascript/3.exp/reference#CircleOptions\n\nvar DEFAULT_CIRCLE_OPTIONS = {\n  fillColor: 'red',\n  fillOpacity: 0.2,\n  strokeColor: 'red',\n  strokeOpacity: 1,\n  strokeWeight: 1.2\n};\n\nvar LocationPicker = function (_Component) {\n  _inherits(LocationPicker, _Component);\n\n  function LocationPicker(props) {\n    _classCallCheck(this, LocationPicker);\n\n    var _this = _possibleConstructorReturn(this, (LocationPicker.__proto__ || Object.getPrototypeOf(LocationPicker)).call(this, props));\n\n    _this.state = {\n      position: props.defaultPosition,\n      shouldRecenterMap: false\n    };\n    _this.handleMarkerDragEnd = _this.handleMarkerDragEnd.bind(_this);\n    return _this;\n  }\n\n  _createClass(LocationPicker, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      var defaultPosition = nextProps.defaultPosition;\n\n      if (JSON.stringify(defaultPosition) !== JSON.stringify(this.props.defaultPosition)) {\n        this.setState({\n          position: defaultPosition,\n          shouldRecenterMap: true\n        }, function () {\n          // Reverse geocode new default position\n          _this2.geocodePosition(defaultPosition).then(function (places) {\n            _this2.notify(defaultPosition, places);\n          }).catch(function (err) {\n            console.error(err);\n\n            _this2.notify(defaultPosition, []);\n          });\n        });\n      }\n    }\n  }, {\n    key: 'notify',\n    value: function notify(position, places) {\n      var onChange = this.props.onChange;\n      var location = {\n        position: position,\n        places: places,\n        address: places.length > 0 ? places[0].formatted_address : ''\n      };\n      onChange && onChange(location);\n    }\n    /**\r\n     * Handle Map marker position change\r\n     * @param { MouseEvent } mouseEvent // https://developers.google.com/maps/documentation/javascript/3.exp/reference#MouseEvent\r\n     */\n\n  }, {\n    key: 'handleMarkerDragEnd',\n    value: function handleMarkerDragEnd(mouseEvent) {\n      var _this3 = this;\n\n      var onChange = this.props.onChange; // Get latitude and longitude\n\n      var lat = mouseEvent.latLng.lat();\n      var lng = mouseEvent.latLng.lng();\n      var position = {\n        lat: lat,\n        lng: lng\n      };\n      this.setState({\n        position: position,\n        shouldRecenterMap: false\n      });\n      this.geocodePosition(position).then(function (places) {\n        _this3.notify(position, places);\n      }).catch(function (err) {\n        console.error(err);\n\n        _this3.notify(position, []);\n      });\n    }\n    /**\r\n     * Geocode position to places\r\n     * @param { Object } position\r\n     * @return { Promise }\r\n     */\n\n  }, {\n    key: 'geocodePosition',\n    value: function geocodePosition(position) {\n      // Geocoder instance\n      var geocoder = new google.maps.Geocoder();\n      return new Promise(function (resolve, reject) {\n        geocoder.geocode({\n          location: position\n        }, function (results, status) {\n          if (status === google.maps.GeocoderStatus.OK) {\n            resolve(results);\n          } else {\n            reject(status);\n          }\n        });\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          zoom = _props.zoom,\n          radius = _props.radius,\n          circleOptions = _props.circleOptions,\n          containerElement = _props.containerElement,\n          mapElement = _props.mapElement;\n      var _state = this.state,\n          position = _state.position,\n          shouldRecenterMap = _state.shouldRecenterMap;\n      return _react2.default.createElement(_GoogleMap2.default, {\n        containerElement: containerElement,\n        mapElement: mapElement,\n        handleMarkerDragEnd: this.handleMarkerDragEnd,\n        position: position,\n        circleOptions: circleOptions,\n        radius: radius,\n        defaultZoom: zoom,\n        zoom: zoom,\n        shouldRecenterMap: shouldRecenterMap\n      });\n    }\n  }]);\n\n  return LocationPicker;\n}(_react.Component);\n\nLocationPicker.propTypes = {\n  containerElement: _propTypes2.default.node.isRequired,\n  mapElement: _propTypes2.default.node.isRequired,\n  onChange: _propTypes2.default.func.isRequired,\n  defaultPosition: _propTypes2.default.object.isRequired,\n  zoom: _propTypes2.default.number,\n  radius: _propTypes2.default.number,\n  circleOptions: _propTypes2.default.object\n};\nLocationPicker.defaultProps = {\n  zoom: DEFAULT_ZOOM,\n  radius: DEFAULT_RADIUS,\n  circleOptions: DEFAULT_CIRCLE_OPTIONS\n};\nexports.default = LocationPicker;","map":null,"metadata":{},"sourceType":"script"}