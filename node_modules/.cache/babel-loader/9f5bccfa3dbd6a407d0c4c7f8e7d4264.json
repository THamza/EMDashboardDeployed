{"ast":null,"code":"import _classCallCheck from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/src/dashboard/Event/addEvent.js\";\nimport React, { Component } from 'react';\nimport { postEventCreationAPICALL, postEventLocationUpdateAPICALL, postEventDateTimeUpdateAPICALL } from '../../utils/requests';\nimport GLOBAL from \"../../utils/global\";\nimport { withRouter } from 'react-router-dom';\nimport Form from \"react-jsonschema-form\";\nimport DatePicker from \"react-datepicker\";\nimport Dropdown from \"react-dropdown\";\nimport { MAP_MARKERS_NAMES } from \"../../utils/mapMarkers\";\nimport { MAP_MARKERS } from \"../../utils/mapMarkers\";\nimport LocationPicker from \"react-location-picker\";\nimport Popup from \"reactjs-popup\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n/* Default position */\n\nvar defaultPosition = {\n  lat: 33.538379,\n  lng: -5.105569\n};\nvar schema = {\n  \"title\": \"Add Event\",\n  \"description\": \"Create a new event\",\n  \"type\": \"object\",\n  \"required\": [\"eventTitle\", \"eventDescription\", \"maxParticipants\"],\n  \"properties\": {\n    \"eventTitle\": {\n      \"type\": \"string\",\n      \"title\": \"Event Title\"\n    },\n    \"eventDescription\": {\n      \"type\": \"string\",\n      \"title\": \"Event Description\"\n    },\n    \"maxParticipants\": {\n      \"type\": \"integer\",\n      \"title\": \"Maximum Participants\"\n    },\n    \"organizer\": {\n      \"type\": \"string\",\n      \"title\": \"Organizer\"\n    },\n    \"isOrdered\": {\n      \"type\": \"boolean\",\n      \"title\": \"Ordered\",\n      \"default\": false\n    }\n  }\n};\n\nvar AddEvent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddEvent, _Component);\n\n  function AddEvent(props) {\n    var _this;\n\n    _classCallCheck(this, AddEvent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddEvent).call(this, props));\n\n    _this.onSubmitEventCreation = function (_ref, e) {\n      var _this2 = this;\n\n      var formData = _ref.formData;\n      return postEventCreationAPICALL(formData.eventTitle, formData.eventDescription, formData.maxParticipants, formData.isOrdered, formData.organizer).then(function (hashedIDEventCreated) {\n        _this2.setState({\n          eventID: hashedIDEventCreated\n        });\n\n        if (_this2.state.eventID.length === 25) {\n          GLOBAL.HASHEDIDEVENTCREATED = hashedIDEventCreated; // if (window.confirm('Would you like to bind this event to a location?')) {\n\n          _this2.refs.popupEventBtn.click(); // } else {\n          //     alert(\"Event Created Successfully\");\n          //     this.forceUpdate();\n          // }\n\n        }\n      });\n    };\n\n    _this.state = {\n      startDate: new Date().now,\n      endDate: new Date().now,\n      position: {\n        lat: 0,\n        lng: 0\n      },\n      address: \"\",\n      commonLocation: -1\n    }; // Bind\n\n    _this.handleLocationChange = _this.handleLocationChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStartDateTimeChange = _this.handleStartDateTimeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleEndDateTimeChange = _this.handleEndDateTimeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateDateTimeLocationOfEvent = _this.updateDateTimeLocationOfEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmitEventCreation = _this.onSubmitEventCreation.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddEvent, [{\n    key: \"handleStartDateTimeChange\",\n    value: function handleStartDateTimeChange(date) {\n      this.setState({\n        startDate: date\n      });\n    }\n  }, {\n    key: \"handleEndDateTimeChange\",\n    value: function handleEndDateTimeChange(date) {\n      this.setState({\n        endDate: date\n      });\n    }\n  }, {\n    key: \"handleLocationChange\",\n    value: function handleLocationChange(_ref2) {\n      var position = _ref2.position,\n          address = _ref2.address;\n      // Set new location\n      this.setState({\n        position: position,\n        address: address\n      });\n    }\n  }, {\n    key: \"updateDateTimeLocationOfEvent\",\n    value: function updateDateTimeLocationOfEvent() {\n      var _this3 = this;\n\n      return postEventDateTimeUpdateAPICALL(this.state.eventID, this.state.startDate, this.state.endDate).then(function (isChanged) {\n        if (isChanged) {\n          if (_this3.state.commonLocation !== -1) {\n            _this3.state.position.lat = MAP_MARKERS[_this3.state.commonLocation].latitude;\n            _this3.state.position.lng = MAP_MARKERS[_this3.state.commonLocation].longitude;\n          }\n\n          return postEventLocationUpdateAPICALL(_this3.state.eventID, _this3.state.position.lat, _this3.state.position.lng, _this3.state.commonLocation).then(function (isChanged) {\n            if (isChanged) {\n              alert(\"Event Created and Location Set Successfully\");\n\n              _this3.props.history.push('add-step');\n\n              _this3.forceUpdate();\n            } else {\n              alert(\"An error has happened while binding the location\");\n\n              _this3.forceUpdate();\n            }\n          });\n        } else {\n          alert(\"An error has happened while binding the date\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        ref: \"popupTime\",\n        className: \"popup\",\n        trigger: React.createElement(\"label\", {\n          ref: \"popupEventBtn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }),\n        position: \"right center\",\n        modal: true,\n        closeOnDocumentClick: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginBottom: 20,\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          marginBottom: 20,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Pick a Date and Time\"), React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginRight: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        style: {\n          justifyContent: 'center',\n          textAlign: 'left',\n          marginRight: \"20px\"\n        },\n        selected: this.state.startDate,\n        timeInputLabel: \"Time:\",\n        todayButton: \"Today\",\n        minDate: new Date(),\n        onChange: this.handleStartDateTimeChange,\n        dateFormat: \"MM/dd/yyyy h:mm aa\",\n        placeholderText: \"Select a start date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(DatePicker, {\n        style: {\n          justifyContent: 'center',\n          textAlign: 'right'\n        },\n        selected: this.state.endDate,\n        timeInputLabel: \"Time:\",\n        todayButton: \"Today\",\n        minDate: new Date(),\n        onChange: this.handleEndDateTimeChange,\n        dateFormat: \"MM/dd/yyyy h:mm aa\",\n        placeholderText: \"Select an end date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        style: {\n          marginBottom: 20,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Pick a location\"), React.createElement(Dropdown, {\n        style: {\n          marginBottom: 20\n        },\n        options: MAP_MARKERS_NAMES,\n        onChange: function onChange(data) {\n          if (data.label !== \"Other\") {\n            _this4.setState({\n              commonLocation: MAP_MARKERS_NAMES.indexOf(data.label)\n            });\n          } else {\n            _this4.setState({\n              commonLocation: -1\n            });\n          }\n        },\n        value: MAP_MARKERS_NAMES[0],\n        placeholder: \"Select an option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(LocationPicker, {\n        containerElement: React.createElement(\"div\", {\n          style: {\n            height: '50%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }),\n        mapElement: React.createElement(\"div\", {\n          style: {\n            height: '400px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }),\n        defaultPosition: defaultPosition,\n        onChange: this.handleLocationChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-outline-success\",\n        style: {\n          width: '97%'\n        },\n        onClick: function onClick() {\n          _this4.updateDateTimeLocationOfEvent();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Bind Location to Event\")))), React.createElement(Form, {\n        schema: schema,\n        onChange: console.log(\"changed\"),\n        onSubmit: this.onSubmitEventCreation,\n        onError: console.log(\"errors\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddEvent;\n}(Component);\n\nexport default withRouter(AddEvent);","map":{"version":3,"sources":["/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/src/dashboard/Event/addEvent.js"],"names":["React","Component","postEventCreationAPICALL","postEventLocationUpdateAPICALL","postEventDateTimeUpdateAPICALL","GLOBAL","withRouter","Form","DatePicker","Dropdown","MAP_MARKERS_NAMES","MAP_MARKERS","LocationPicker","Popup","defaultPosition","lat","lng","schema","AddEvent","props","onSubmitEventCreation","e","formData","eventTitle","eventDescription","maxParticipants","isOrdered","organizer","then","hashedIDEventCreated","setState","eventID","state","length","HASHEDIDEVENTCREATED","refs","popupEventBtn","click","startDate","Date","now","endDate","position","address","commonLocation","handleLocationChange","bind","handleStartDateTimeChange","handleEndDateTimeChange","updateDateTimeLocationOfEvent","date","isChanged","latitude","longitude","alert","history","push","forceUpdate","marginBottom","marginTop","textAlign","display","justifyContent","alignItems","marginRight","data","label","indexOf","height","width","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n    postEventCreationAPICALL,\n    postEventLocationUpdateAPICALL,\n    postEventDateTimeUpdateAPICALL\n} from '../../utils/requests';\nimport GLOBAL from \"../../utils/global\";\nimport {withRouter} from 'react-router-dom';\nimport Form from \"react-jsonschema-form\";\nimport DatePicker from \"react-datepicker\";\nimport Dropdown from \"react-dropdown\";\nimport {MAP_MARKERS_NAMES} from \"../../utils/mapMarkers\";\nimport {MAP_MARKERS} from \"../../utils/mapMarkers\";\nimport LocationPicker from \"react-location-picker\";\nimport Popup from \"reactjs-popup\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\n/* Default position */\nconst defaultPosition = {\n    lat: 33.538379,\n    lng: -5.105569\n};\n\n\n\nconst schema = {\n  \"title\": \"Add Event\",\n  \"description\": \"Create a new event\",\n  \"type\": \"object\",\n  \"required\": [\n    \"eventTitle\",\n    \"eventDescription\",\n    \"maxParticipants\"\n  ],\n  \"properties\": {\n    \"eventTitle\": {\n      \"type\": \"string\",\n      \"title\": \"Event Title\"\n    },\n    \"eventDescription\": {\n      \"type\": \"string\",\n      \"title\": \"Event Description\"\n    },\n    \"maxParticipants\": {\n      \"type\": \"integer\",\n      \"title\": \"Maximum Participants\",\n    },\n     \"organizer\": {\n        \"type\": \"string\",\n         \"title\": \"Organizer\"\n     },\n    \"isOrdered\": {\n      \"type\": \"boolean\",\n      \"title\": \"Ordered\",\n        \"default\": false\n    }\n\n  }\n};\n\nclass AddEvent extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n        startDate: new Date().now,\n        endDate: new Date().now,\n        position: {\n            lat: 0,\n            lng: 0\n        },\n        address: \"\",\n        commonLocation: -1\n    };\n      \n    // Bind\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleStartDateTimeChange = this.handleStartDateTimeChange.bind(this);\n    this.handleEndDateTimeChange = this.handleEndDateTimeChange.bind(this);\n    this.updateDateTimeLocationOfEvent = this.updateDateTimeLocationOfEvent.bind(this);\n    this.onSubmitEventCreation = this.onSubmitEventCreation.bind(this);\n  }\n\n    handleStartDateTimeChange(date) {\n        this.setState({\n            startDate: date\n        });\n    }\n\n    handleEndDateTimeChange(date) {\n        this.setState({\n            endDate: date\n        });\n    }\n\n\n    handleLocationChange ({ position, address }) {\n\n        // Set new location\n        this.setState({ position, address });\n    }\n\n\n    updateDateTimeLocationOfEvent () {\n        return postEventDateTimeUpdateAPICALL(this.state.eventID,this.state.startDate, this.state.endDate)\n            .then((isChanged) => {\n                if (isChanged) {\n                    if(this.state.commonLocation !== -1){\n                        this.state.position.lat = MAP_MARKERS[this.state.commonLocation].latitude;\n                        this.state.position.lng = MAP_MARKERS[this.state.commonLocation].longitude;\n                    }\n                    return postEventLocationUpdateAPICALL(this.state.eventID,this.state.position.lat, this.state.position.lng, this.state.commonLocation)\n                        .then((isChanged) => {\n                            if (isChanged) {\n                                alert(\"Event Created and Location Set Successfully\");\n                                this.props.history.push('add-step');\n                                this.forceUpdate();\n                            } else {\n                                alert(\"An error has happened while binding the location\");\n                                this.forceUpdate();\n                            }\n                        })\n                } else {\n                    alert(\"An error has happened while binding the date\");\n                }\n            })\n\n\n\n    }\n    \n onSubmitEventCreation = function({formData}, e) {\n    return postEventCreationAPICALL(formData.eventTitle, formData.eventDescription, formData.maxParticipants, formData.isOrdered, formData.organizer)\n        .then(hashedIDEventCreated => {\n            this.setState({\n                eventID: hashedIDEventCreated\n            });\n\n            if(this.state.eventID.length === 25){\n                GLOBAL.HASHEDIDEVENTCREATED = hashedIDEventCreated;\n                // if (window.confirm('Would you like to bind this event to a location?')) {\n                    this.refs.popupEventBtn.click();\n                // } else {\n                //     alert(\"Event Created Successfully\");\n                //     this.forceUpdate();\n                // }\n            }\n        })\n     \n};\n\n\n\n\n\n  render () {\n    return (   \n      <div>\n        <div>\n            {/*PopUp selecting time*/}\n            <Popup\n                ref={\"popupTime\"}\n                className='popup'\n                trigger={<label ref={\"popupEventBtn\"}></label>}\n                position=\"right center\"\n                modal\n                closeOnDocumentClick>\n\n                <div style={{marginBottom: 20, marginTop: 20}}>\n                    <h3 style={{marginBottom: 20, textAlign: 'center'}}>Pick a Date and Time</h3>\n                    <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', marginRight: 20}}>\n                        <DatePicker\n                            style={{justifyContent: 'center', textAlign: 'left', marginRight: \"20px\"}}\n                            selected={this.state.startDate}\n                            timeInputLabel=\"Time:\"\n                            todayButton={\"Today\"}\n                            minDate={new Date()}\n                            onChange={this.handleStartDateTimeChange}\n                            dateFormat=\"MM/dd/yyyy h:mm aa\"\n                            placeholderText=\"Select a start date\"\n                        />\n\n\n                        <DatePicker\n                            style={{justifyContent: 'center', textAlign: 'right'}}\n                            selected={this.state.endDate}\n                            timeInputLabel=\"Time:\"\n                            todayButton={\"Today\"}\n                            minDate={new Date()}\n                            onChange={this.handleEndDateTimeChange}\n                            dateFormat=\"MM/dd/yyyy h:mm aa\"\n                            placeholderText=\"Select an end date\"\n                        />\n                    </div>\n\n                    <h3 style={{marginBottom: 20, textAlign: 'center'}}>Pick a location</h3>\n                    <Dropdown style={{marginBottom: 20}} options={MAP_MARKERS_NAMES} onChange={(data) => {\n                        if(data.label !== \"Other\"){\n                            this.setState({\n                                commonLocation: MAP_MARKERS_NAMES.indexOf(data.label)\n                            });\n                        }\n                        else{\n                            this.setState({\n                                commonLocation: -1\n                            });\n                        }\n\n                    }} value={MAP_MARKERS_NAMES[0]} placeholder=\"Select an option\" />\n                    <div>\n                        <LocationPicker\n                            containerElement={ <div style={ {height: '50%'} } /> }\n                            mapElement={ <div style={ {height: '400px'} } /> }\n                            defaultPosition={defaultPosition}\n                            onChange={this.handleLocationChange} />\n                        <button className='btn btn-outline-success' style={{\n                            width: '97%'}} onClick={()=>{\n                            this.updateDateTimeLocationOfEvent();\n\n                        }}>Bind Location to Event</button>\n                    </div>\n\n\n                </div>\n\n            </Popup>\n\n            <Form schema={schema}\n            onChange={console.log(\"changed\")}\n            onSubmit={this.onSubmitEventCreation}\n            onError={console.log(\"errors\")} />\n\n\n\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default withRouter(AddEvent);"]},"metadata":{},"sourceType":"module"}