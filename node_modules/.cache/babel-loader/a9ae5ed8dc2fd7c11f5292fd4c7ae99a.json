{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _reactAutobind = require('react-autobind');\n\nvar _reactAutobind2 = _interopRequireDefault(_reactAutobind);\n\nvar _suggestion = require('./suggestion');\n\nvar _suggestion2 = _interopRequireDefault(_suggestion);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Suggestions = function (_React$Component) {\n  _inherits(Suggestions, _React$Component);\n\n  function Suggestions(props) {\n    _classCallCheck(this, Suggestions);\n\n    var _this = _possibleConstructorReturn(this, (Suggestions.__proto__ || Object.getPrototypeOf(Suggestions)).call(this, props));\n\n    (0, _reactAutobind2.default)(_this);\n    return _this;\n  }\n\n  _createClass(Suggestions, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.scrollToSuggestion();\n    }\n  }, {\n    key: 'scrollToSuggestion',\n    value: function scrollToSuggestion() {\n      if (this.props.focusedSuggestion === null) {\n        this.list.scrollTop = 0;\n        return;\n      }\n\n      var focusedSuggestion = this.focusedSuggestion,\n          list = this.list;\n      var listRect = list.getBoundingClientRect();\n      var suggestionRect = focusedSuggestion.getBoundingClientRect();\n\n      if (suggestionRect.bottom > listRect.bottom) {\n        list.scrollTop = focusedSuggestion.offsetTop + focusedSuggestion.clientHeight - list.clientHeight;\n      } else if (suggestionRect.top < listRect.top) {\n        list.scrollTop = focusedSuggestion.offsetTop;\n      }\n    }\n  }, {\n    key: 'setFocusedSuggestion',\n    value: function setFocusedSuggestion(ref) {\n      this.focusedSuggestion = ref && ref.item;\n    }\n  }, {\n    key: 'handleMouseMove',\n    value: function handleMouseMove(event, index) {\n      var _event$nativeEvent = event.nativeEvent,\n          movementX = _event$nativeEvent.movementX,\n          movementY = _event$nativeEvent.movementY;\n\n      if (movementX || movementY) {\n        this.props.onSuggestionHover(index);\n      }\n    }\n  }, {\n    key: 'handleMouseLeave',\n    value: function handleMouseLeave() {\n      this.props.onSuggestionHover(null);\n    }\n  }, {\n    key: 'renderSuggestion',\n    value: function renderSuggestion(suggestion, index) {\n      var _classNames;\n\n      var props = this.props;\n      var isFocused = props.focusedSuggestion === index;\n      return _react2.default.createElement(_suggestion2.default, {\n        className: (0, _classnames2.default)((_classNames = {}, _defineProperty(_classNames, props.styles.suggestion, true), _defineProperty(_classNames, props.styles.suggestionFocused, isFocused), _classNames)),\n        index: index,\n        key: suggestion,\n        onClick: props.onSelection,\n        onMouseMove: this.handleMouseMove,\n        ref: isFocused && this.setFocusedSuggestion,\n        searchTerm: props.searchTerm,\n        suggestion: suggestion,\n        suggestionRenderer: props.suggestionRenderer\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      return _react2.default.createElement('ul', {\n        className: this.props.styles.suggestions,\n        ref: function ref(_ref) {\n          return _this2.list = _ref;\n        },\n        onMouseLeave: this.handleMouseLeave\n      }, this.props.suggestions.map(this.renderSuggestion));\n    }\n  }]);\n\n  return Suggestions;\n}(_react2.default.Component);\n\nSuggestions.defaultProps = {\n  styles: {\n    suggestions: 'react-search-bar__suggestions',\n    suggestion: 'react-search-bar__suggestion',\n    focusedSuggestion: 'react-search-bar__suggestion--focused'\n  }\n};\nSuggestions.propTypes = {\n  focusedSuggestion: _propTypes2.default.number,\n  onSelection: _propTypes2.default.func.isRequired,\n  onSuggestionHover: _propTypes2.default.func.isRequired,\n  searchTerm: _propTypes2.default.string.isRequired,\n  styles: _propTypes2.default.object,\n  suggestions: _propTypes2.default.array.isRequired\n};\nexports.default = Suggestions;","map":null,"metadata":{},"sourceType":"script"}