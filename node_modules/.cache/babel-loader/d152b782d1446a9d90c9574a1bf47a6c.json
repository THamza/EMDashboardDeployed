{"ast":null,"code":"import _classCallCheck from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/src/dashboard/User/updateUser.js\";\nimport React, { Component } from 'react';\nimport { postDeleteUserAPICALL, postUserUpdateAPICALL, getParticipantsDataAPICall } from '../../utils/requests';\nimport { withRouter } from 'react-router-dom';\nimport Form from \"react-jsonschema-form\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nvar uiSchema = {\n  createdAt: {\n    \"ui:readonly\": true\n  },\n  updatedAt: {\n    \"ui:readonly\": true\n  },\n  hashedID: {\n    \"ui:readonly\": true\n  },\n  auiID: {\n    \"ui:readonly\": true\n  }\n};\nvar schema = {\n  \"title\": \"Update Step\",\n  \"description\": \"Update an existing step\",\n  \"type\": \"object\",\n  \"required\": [\"firstName\", \"lastName\", \"email\", \"phoneNumber\", \"gender\"],\n  \"properties\": {\n    \"hashedID\": {\n      \"type\": \"string\",\n      \"title\": \"User System ID\"\n    },\n    \"createdAt\": {\n      \"type\": \"string\",\n      \"title\": \"Created At\"\n    },\n    \"updatedAt\": {\n      \"type\": \"string\",\n      \"title\": \"Last Updated At\"\n    },\n    \"auiID\": {\n      \"type\": \"string\",\n      \"title\": \"AUI ID\"\n    },\n    \"firstName\": {\n      \"type\": \"string\",\n      \"title\": \"First Name\"\n    },\n    \"lastName\": {\n      \"type\": \"string\",\n      \"title\": \"lastName\"\n    },\n    \"email\": {\n      \"type\": \"string\",\n      \"title\": \"Email\"\n    },\n    \"phoneNumber\": {\n      \"type\": \"number\",\n      \"title\": \"Phone Number\"\n    },\n    \"gender\": {\n      \"type\": \"string\",\n      \"title\": \"Gender\"\n    }\n  }\n};\n\nvar UpdateUser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateUser, _Component);\n\n  function UpdateUser(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateUser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateUser).call(this, props));\n\n    _this.onSubmitStepUpdate = function (_ref, e) {\n      var formData = _ref.formData;\n      var gender;\n      formData.gender === \"Male\" ? gender = 1 : gender = 0;\n      return postUserUpdateAPICALL(this.props.history.location.state.data.data.data.hashedID, formData.firstName, formData.lastName, formData.email, formData.phoneNumber.toString(), gender).then(function (isUpdated) {\n        console.log(isUpdated);\n\n        if (isUpdated) {\n          // GLOBAL.HASHEDIDEVENTCREATED = hashedIDStepUpdated;\n          alert(\"User Updated Successfully\"); //     this.forceUpdate();\n        } else {\n          alert(\"An error has occurred while updating the user\");\n        }\n      });\n    };\n\n    _this.state = {};\n    console.log(\"DOZNLOQD\");\n    console.log(_this.props.history.location.state.data.data.data);\n    schema.properties.hashedID.default = _this.props.history.location.state.data.data.data.hashedID;\n    schema.properties.createdAt.default = _this.props.history.location.state.data.data.data.createdAtConverted;\n    schema.properties.updatedAt.default = _this.props.history.location.state.data.data.data.updatedAtConverted;\n    schema.properties.auiID.default = _this.props.history.location.state.data.data.data.auiID;\n    schema.properties.firstName.default = _this.props.history.location.state.data.data.data.firstName;\n    schema.properties.lastName.default = _this.props.history.location.state.data.data.data.lastName;\n    schema.properties.email.default = _this.props.history.location.state.data.data.data.email;\n    schema.properties.phoneNumber.default = parseInt(_this.props.history.location.state.data.data.data.phoneNumber);\n    schema.properties.gender.default = _this.props.history.location.state.data.data.data.genderConverted; // Bind\n\n    _this.onSubmitStepUpdate = _this.onSubmitStepUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UpdateUser, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"deleteUser\",\n    value: function deleteUser(auiID) {\n      return postDeleteUserAPICALL(auiID).then(function (isDelete) {\n        return isDelete;\n      });\n    }\n  }, {\n    key: \"getParticipantsData\",\n    value: function getParticipantsData(usersIDs, hashedIDEvent, hashedIDStep, type) {\n      var _this2 = this;\n\n      return getParticipantsDataAPICall(usersIDs).then(function (data) {\n        if (data.status !== \"success\") {\n          alert(\"Could not get participants info\");\n        } else {\n          console.log(data);\n\n          switch (type) {\n            case \"completions\":\n              console.log(data.data);\n\n              _this2.props.history.push('/admin/view-completions', {\n                CompletionsReady: data.data,\n                hashedIDEvent: hashedIDEvent,\n                hashedIDStep: hashedIDStep\n              });\n\n              break;\n\n            case \"scanners\":\n              _this2.props.history.push('/admin/view-scanners', {\n                ScannersReady: data.data,\n                hashedIDEvent: hashedIDEvent,\n                hashedIDStep: hashedIDStep\n              });\n\n              break;\n\n            default:\n              console.log(\"Unrecognized type\");\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Form, {\n        schema: schema,\n        uiSchema: uiSchema,\n        onChange: console.log(\"changed\"),\n        onSubmit: this.onSubmitStepUpdate,\n        onError: console.log(\"errors\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: function onClick() {\n          // this.getParticipantsData(this.props.history.location.state.data.data.data.peopleCompletedIDs, this.props.history.location.state.data.data.data.hashedIDEvent, this.props.history.location.state.data.data.data.hashedIDStep, \"completions\");\n          // this.props.history.push('/admin/view-participants', {ParticipantsReady: this.props.history.location.state.data.data.data.ParticipantsReady});\n          alert(\"Coming Soon\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"View Scan Privilege\"), React.createElement(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: function onClick() {\n          // console.log(\"there\");\n          // console.log(this.props.history.location.state.data.data.data.scanners);\n          // this.getParticipantsData(this.props.history.location.state.data.data.data.scanners, this.props.history.location.state.data.data.data.hashedIDEvent, this.props.history.location.state.data.data.data.hashedIDStep, \"scanners\");\n          alert(\"Coming Soon\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"View Joined Events\"), React.createElement(\"button\", {\n        className: \"btn btn-dark\",\n        onClick: function onClick() {\n          // this.props.history.push('/admin/step-statistics',{hashedIDEvent: this.props.history.location.state.data.data.data.hashedIDEvent, hashedIDStep: this.props.history.location.state.data.data.data.hashedIDStep});\n          alert(\"Coming Soon\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Statistics\"), React.createElement(\"button\", {\n        style: {\n          position: \"absolute\",\n          right: 0\n        },\n        className: \"btn btn-danger\",\n        onClick: function onClick() {\n          console.log(_this3.props.history.location.state.data.data.data.auiID);\n          var answer = window.prompt(\"Are you sure want to delete this User? Please enter the ID of the user:\");\n\n          if (answer === _this3.props.history.location.state.data.data.data.auiID) {\n            // console.log(this.props.history.location.state.eventID,props.original.hashedIDStep);\n            return _this3.deleteUser(_this3.props.history.location.state.data.data.data.auiID).then(function (isDeleted) {\n              if (isDeleted) {\n                alert(\"User deleted successfully\");\n              }\n            });\n          } else {\n            alert(\"The IDs don't match. Aborting...\");\n          }\n\n          console.log(answer);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Delete\")));\n    }\n  }]);\n\n  return UpdateUser;\n}(Component);\n\nexport default withRouter(UpdateUser);","map":{"version":3,"sources":["/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/src/dashboard/User/updateUser.js"],"names":["React","Component","postDeleteUserAPICALL","postUserUpdateAPICALL","getParticipantsDataAPICall","withRouter","Form","uiSchema","createdAt","updatedAt","hashedID","auiID","schema","UpdateUser","props","onSubmitStepUpdate","e","formData","gender","history","location","state","data","firstName","lastName","email","phoneNumber","toString","then","isUpdated","console","log","alert","properties","default","createdAtConverted","updatedAtConverted","parseInt","genderConverted","bind","isDelete","usersIDs","hashedIDEvent","hashedIDStep","type","status","push","CompletionsReady","ScannersReady","position","right","answer","window","prompt","deleteUser","isDeleted"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n    postDeleteUserAPICALL,\n    postUserUpdateAPICALL,\n    getParticipantsDataAPICall\n} from '../../utils/requests';\nimport {withRouter} from 'react-router-dom';\nimport Form from \"react-jsonschema-form\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\n\nconst uiSchema = {\n    createdAt: {\n        \"ui:readonly\": true\n    },\n    updatedAt: {\n        \"ui:readonly\": true\n    },\n    hashedID: {\n        \"ui:readonly\": true\n    },\n    auiID: {\n        \"ui:readonly\": true\n    }\n\n};\n\n\nconst schema = {\n    \"title\": \"Update Step\",\n    \"description\": \"Update an existing step\",\n    \"type\": \"object\",\n    \"required\": [\n        \"firstName\",\n        \"lastName\",\n        \"email\",\n        \"phoneNumber\",\n        \"gender\"\n    ],\n    \"properties\": {\n        \"hashedID\": {\n            \"type\": \"string\",\n            \"title\": \"User System ID\"\n        },\n        \"createdAt\": {\n            \"type\": \"string\",\n            \"title\": \"Created At\"\n        },\n        \"updatedAt\": {\n            \"type\": \"string\",\n            \"title\": \"Last Updated At\"\n        },\n        \"auiID\": {\n            \"type\": \"string\",\n            \"title\": \"AUI ID\"\n        },\n        \"firstName\": {\n            \"type\": \"string\",\n            \"title\": \"First Name\"\n        },\n        \"lastName\": {\n            \"type\": \"string\",\n            \"title\": \"lastName\"\n        },\n        \"email\": {\n            \"type\": \"string\",\n            \"title\": \"Email\"\n        },\n        \"phoneNumber\": {\n            \"type\": \"number\",\n            \"title\": \"Phone Number\"\n        },\n        \"gender\": {\n            \"type\": \"string\",\n            \"title\": \"Gender\"\n        }\n    }\n};\n\n\nclass UpdateUser extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n        };\n        console.log(\"DOZNLOQD\");\n        console.log(this.props.history.location.state.data.data.data);\n\n\n        schema.properties.hashedID.default = this.props.history.location.state.data.data.data.hashedID;\n        schema.properties.createdAt.default = this.props.history.location.state.data.data.data.createdAtConverted;\n        schema.properties.updatedAt.default = this.props.history.location.state.data.data.data.updatedAtConverted;\n        schema.properties.auiID.default = this.props.history.location.state.data.data.data.auiID;\n        schema.properties.firstName.default = this.props.history.location.state.data.data.data.firstName;\n        schema.properties.lastName.default = this.props.history.location.state.data.data.data.lastName;\n        schema.properties.email.default = this.props.history.location.state.data.data.data.email;\n        schema.properties.phoneNumber.default = parseInt(this.props.history.location.state.data.data.data.phoneNumber);\n        schema.properties.gender.default = this.props.history.location.state.data.data.data.genderConverted;\n\n        // Bind\n        this.onSubmitStepUpdate = this.onSubmitStepUpdate.bind(this);\n\n    }\n\n    componentDidMount(){\n\n    }\n\n    deleteUser(auiID){\n        return postDeleteUserAPICALL(auiID)\n            .then(isDelete => {\n                return isDelete;\n            })\n    }\n\n\n    getParticipantsData(usersIDs, hashedIDEvent, hashedIDStep, type){\n        return getParticipantsDataAPICall(usersIDs)\n            .then(data => {\n                if(data.status!==\"success\"){\n                    alert(\"Could not get participants info\");\n                }else{\n                    console.log(data);\n                    switch(type){\n                        case \"completions\":\n                            console.log(data.data);\n                            this.props.history.push('/admin/view-completions', {CompletionsReady: data.data, hashedIDEvent: hashedIDEvent, hashedIDStep: hashedIDStep});\n                            break;\n                        case \"scanners\": this.props.history.push('/admin/view-scanners', {ScannersReady: data.data, hashedIDEvent: hashedIDEvent, hashedIDStep: hashedIDStep});\n                            break;\n                        default:\n                            console.log(\"Unrecognized type\");\n                    }\n                }\n            })\n    }\n\n    onSubmitStepUpdate = function({formData}, e) {\n        let gender;\n\n        (formData.gender===\"Male\")?gender=1:gender=0;\n\n        return postUserUpdateAPICALL(this.props.history.location.state.data.data.data.hashedID, formData.firstName, formData.lastName, formData.email,formData.phoneNumber.toString(), gender)\n            .then(isUpdated => {\n                console.log(isUpdated);\n\n                if(isUpdated){\n                    // GLOBAL.HASHEDIDEVENTCREATED = hashedIDStepUpdated;\n                    alert(\"User Updated Successfully\");\n                    //     this.forceUpdate();\n                }else{\n                    alert(\"An error has occurred while updating the user\");\n                }\n            })\n    };\n\n    render () {\n        return (\n            <div>\n                <div>\n                    <Form schema={schema}\n                          uiSchema={uiSchema}\n                          onChange={console.log(\"changed\")}\n                          onSubmit={this.onSubmitStepUpdate}\n                          onError={console.log(\"errors\")} />\n\n                    {/*View Participants*/}\n\n                    <button className='btn btn-warning' onClick={()=>{\n                        // this.getParticipantsData(this.props.history.location.state.data.data.data.peopleCompletedIDs, this.props.history.location.state.data.data.data.hashedIDEvent, this.props.history.location.state.data.data.data.hashedIDStep, \"completions\");\n                        // this.props.history.push('/admin/view-participants', {ParticipantsReady: this.props.history.location.state.data.data.data.ParticipantsReady});\n                        alert(\"Coming Soon\");\n                    }}>View Scan Privilege</button>\n\n\n                    <button className='btn btn-warning' onClick={()=>{\n                        // console.log(\"there\");\n                        // console.log(this.props.history.location.state.data.data.data.scanners);\n                        // this.getParticipantsData(this.props.history.location.state.data.data.data.scanners, this.props.history.location.state.data.data.data.hashedIDEvent, this.props.history.location.state.data.data.data.hashedIDStep, \"scanners\");\n                        alert(\"Coming Soon\");\n                    }}>View Joined Events</button>\n\n                    <button className='btn btn-dark' onClick={()=>{\n                        // this.props.history.push('/admin/step-statistics',{hashedIDEvent: this.props.history.location.state.data.data.data.hashedIDEvent, hashedIDStep: this.props.history.location.state.data.data.data.hashedIDStep});\n                        alert(\"Coming Soon\");\n                    }}>Statistics</button>\n\n                    <button style={{position: \"absolute\", right: 0}} className='btn btn-danger' onClick={()=>{\n                        console.log(this.props.history.location.state.data.data.data.auiID);\n                        let answer = window.prompt(\"Are you sure want to delete this User? Please enter the ID of the user:\")\n\n                        if(answer === this.props.history.location.state.data.data.data.auiID){\n                            // console.log(this.props.history.location.state.eventID,props.original.hashedIDStep);\n                            return this.deleteUser(this.props.history.location.state.data.data.data.auiID)\n                                .then((isDeleted) => {\n                                    if(isDeleted){\n                                        alert(\"User deleted successfully\");\n                                    }\n                                })\n                        }else{\n                            alert(\"The IDs don't match. Aborting...\")\n                        }\n                        console.log(answer);\n                    }}>Delete</button>\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(UpdateUser);"]},"metadata":{},"sourceType":"module"}