{"ast":null,"code":"import _classCallCheck from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/src/views/statistics/statistics.js\";\nimport React, { Component } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { getStatisticsDataAPICALL } from '../../utils/requests';\nimport { Card } from \"../../components/Card/Card.jsx\";\nimport { StatsCard } from \"../../components/StatsCard/StatsCard.jsx\";\nimport { Tasks } from \"../../components/Tasks/Tasks.jsx\";\nimport { dataSales, optionsSales, responsiveSales, legendSales, dataBar, optionsBar, responsiveBar, legendBar } from \"../../variables/Variables.jsx\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nvar dataBarEventsStepsTraffic = {\n  labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n  series: []\n};\nvar optionsBarEventsStepsTraffic = {\n  seriesBarDistance: 10,\n  axisX: {\n    showGrid: false\n  },\n  height: \"245px\"\n};\nvar responsiveBarEventsStepsTraffic = [[\"screen and (max-width: 640px)\", {\n  seriesBarDistance: 5,\n  axisX: {\n    labelInterpolationFnc: function labelInterpolationFnc(value) {\n      return value[0];\n    }\n  }\n}]];\nvar legendBarEventsStepsTraffic = {\n  names: [\"Events Created\", \"Steps Created\"],\n  types: [\"info\", \"danger\"]\n};\nvar dataPieAcountActivationRatio = {\n  labels: [],\n  series: []\n};\nvar legendPieAcountActivationRatio = {\n  names: [\"Activated\", \"Not-Activated\"],\n  types: [\"info\", \"danger\"]\n};\nvar dataTraffic = {\n  labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n  series: [[]]\n};\nvar optionsTraffic = {\n  low: 0,\n  high: 1000,\n  showArea: false,\n  height: \"245px\",\n  axisX: {\n    showGrid: false\n  },\n  lineSmooth: true,\n  showLine: true,\n  showPoint: true,\n  fullWidth: true,\n  chartPadding: {\n    right: 50\n  }\n};\nvar responsiveTraffic = [[\"screen and (max-width: 640px)\", {\n  axisX: {\n    labelInterpolationFnc: function labelInterpolationFnc(value) {\n      return value[0];\n    }\n  }\n}]];\nvar legendTraffic = {\n  names: [\"Connections \"],\n  types: [\"info\"]\n};\n\nvar Statistics =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Statistics, _Component);\n\n  _createClass(Statistics, [{\n    key: \"createLegend\",\n    value: function createLegend(json) {\n      var legend = [];\n\n      for (var i = 0; i < json[\"names\"].length; i++) {\n        var type = \"fa fa-circle text-\" + json[\"types\"][i];\n        legend.push(React.createElement(\"i\", {\n          className: type,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }));\n        legend.push(\" \");\n        legend.push(json[\"names\"][i]);\n      }\n\n      return legend;\n    }\n  }]);\n\n  function Statistics(props) {\n    var _this;\n\n    _classCallCheck(this, Statistics);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Statistics).call(this, props));\n    _this.state = {\n      numberOfUsers: 0,\n      numberOfErrors: 0,\n      numberOfEvents: 0,\n      numberOfSteps: 0\n    };\n    return _this;\n  }\n\n  _createClass(Statistics, [{\n    key: \"getData\",\n    value: function getData() {\n      var _this2 = this;\n\n      console.log(\"Getting data..\");\n      var data = [];\n      return getStatisticsDataAPICALL(this.state.object).then(function (res) {\n        console.log(res);\n        data = res.data.data;\n\n        _this2.setState({\n          numberOfUsers: data.numberOfUsers,\n          numberOfErrors: data.numberOfErrors,\n          numberOfEvents: data.numberOfEvents,\n          numberOfSteps: data.numberOfSteps\n        }); //            Pie Data\n\n\n        dataPieAcountActivationRatio.series = [data.numberOfActivatedAccounts, data.numberOfUsers - data.numberOfActivatedAccounts];\n        dataPieAcountActivationRatio.labels = [parseInt(data.numberOfActivatedAccounts * 100 / data.numberOfUsers).toString() + \"%\", parseInt((data.numberOfUsers - data.numberOfActivatedAccounts) * 100 / data.numberOfUsers).toString() + \"%\"]; //            Curve Data\n\n        dataTraffic.series[0] = data.weeklyTraffic;\n        optionsTraffic.high = Math.max(data.weeklyTraffic + 50); //            Bar Data\n\n        dataBarEventsStepsTraffic.series[0] = data.eventStepTraffic.events;\n        dataBarEventsStepsTraffic.series[1] = data.eventStepTraffic.steps;\n\n        _this2.forceUpdate();\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var thing = [];\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(StatsCard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \" text-warning\",\n          class: \"fas fa-shoe-prints\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }),\n        statsText: \"Steps\",\n        statsValue: this.state.numberOfSteps,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-refresh\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }),\n        statsIconText: \"Updated now\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(StatsCard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"fas fa-calendar-alt text-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }),\n        statsText: \"Events\",\n        statsValue: this.state.numberOfEvents,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-calendar-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }),\n        statsIconText: \"Last day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(StatsCard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"pe-7s-graph1 text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }),\n        statsText: \"Errors\",\n        statsValue: this.state.numberOfErrors,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-clock-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }),\n        statsIconText: \"In the last 12 hours\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(StatsCard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"fas fa-users text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }),\n        statsText: \"Users\",\n        statsValue: this.state.numberOfUsers,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-refresh\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }),\n        statsIconText: \"Updated now\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Card, {\n        statsIcon: \"fa fa-history\",\n        id: \"chartHours\",\n        title: \"Users Traffic\",\n        category: \"7 Days Traffic\",\n        stats: \"Updated just now\",\n        content: React.createElement(\"div\", {\n          className: \"ct-chart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(ChartistGraph, {\n          data: dataTraffic,\n          type: \"Line\",\n          options: optionsTraffic,\n          responsiveOptions: responsiveTraffic,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        })),\n        legend: React.createElement(\"div\", {\n          className: \"legend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, this.createLegend(legendTraffic)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Accounts Statistics\",\n        category: \"Activated Accounts vs Non-Activated Accounts\",\n        stats: \"Updated just now\",\n        statsIcon: \"fa fa-history\",\n        content: React.createElement(\"div\", {\n          id: \"chartPreferences\",\n          className: \"ct-chart ct-perfect-fourth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, React.createElement(ChartistGraph, {\n          data: dataPieAcountActivationRatio,\n          type: \"Pie\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        })),\n        legend: React.createElement(\"div\", {\n          className: \"legend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, this.createLegend(legendPieAcountActivationRatio)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Card, {\n        id: \"chartActivity\",\n        title: \"Events/Steps Traffic\",\n        stats: \"Updated just now\",\n        statsIcon: \"fa fa-check\",\n        content: React.createElement(\"div\", {\n          className: \"ct-chart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }, React.createElement(ChartistGraph, {\n          data: dataBarEventsStepsTraffic,\n          type: \"Bar\",\n          options: optionsBarEventsStepsTraffic,\n          responsiveOptions: responsiveBarEventsStepsTraffic,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        })),\n        legend: React.createElement(\"div\", {\n          className: \"legend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, this.createLegend(legendBarEventsStepsTraffic)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Tasks\",\n        category: \"Backend development\",\n        stats: \"Updated just now\",\n        statsIcon: \"fa fa-history\",\n        content: React.createElement(\"div\", {\n          className: \"table-full-width\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          className: \"table\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, React.createElement(Tasks, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Statistics;\n}(Component);\n\nexport default Statistics;","map":{"version":3,"sources":["/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/src/views/statistics/statistics.js"],"names":["React","Component","ChartistGraph","Container","Row","Col","getStatisticsDataAPICALL","Card","StatsCard","Tasks","dataSales","optionsSales","responsiveSales","legendSales","dataBar","optionsBar","responsiveBar","legendBar","dataBarEventsStepsTraffic","labels","series","optionsBarEventsStepsTraffic","seriesBarDistance","axisX","showGrid","height","responsiveBarEventsStepsTraffic","labelInterpolationFnc","value","legendBarEventsStepsTraffic","names","types","dataPieAcountActivationRatio","legendPieAcountActivationRatio","dataTraffic","optionsTraffic","low","high","showArea","lineSmooth","showLine","showPoint","fullWidth","chartPadding","right","responsiveTraffic","legendTraffic","Statistics","json","legend","i","length","type","push","props","state","numberOfUsers","numberOfErrors","numberOfEvents","numberOfSteps","console","log","data","object","then","res","setState","numberOfActivatedAccounts","parseInt","toString","weeklyTraffic","Math","max","eventStepTraffic","events","steps","forceUpdate","thing","getData","createLegend"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport {getStatisticsDataAPICALL} from '../../utils/requests';\n\nimport { Card } from \"../../components/Card/Card.jsx\";\nimport { StatsCard } from \"../../components/StatsCard/StatsCard.jsx\";\nimport { Tasks } from \"../../components/Tasks/Tasks.jsx\";\n\nimport {\n  dataSales,\n  optionsSales,\n  responsiveSales,\n  legendSales,\n  dataBar,\n  optionsBar,\n  responsiveBar,\n  legendBar\n} from \"../../variables/Variables.jsx\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\n\nvar dataBarEventsStepsTraffic = {\n  labels: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"Mai\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  series: [\n  ]\n};\nvar optionsBarEventsStepsTraffic = {\n  seriesBarDistance: 10,\n  axisX: {\n    showGrid: false\n  },\n  height: \"245px\"\n};\nvar responsiveBarEventsStepsTraffic = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      seriesBarDistance: 5,\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendBarEventsStepsTraffic = {\n  names: [\"Events Created\", \"Steps Created\"],\n  types: [\"info\", \"danger\"]\n};\n\n\nlet dataPieAcountActivationRatio = {\n      labels: [],\n      series: []\n    };\nlet legendPieAcountActivationRatio = {\n      names: [\"Activated\", \"Not-Activated\"],\n      types: [\"info\", \"danger\"]\n    };\nvar dataTraffic = {\n  labels: [\n    \"Mon\",\n    \"Tue\",\n    \"Wed\",\n    \"Thu\",\n    \"Fri\",\n    \"Sat\",\n    \"Sun\"\n  ],\n  series: [\n    [],\n  ]\n};\nvar optionsTraffic = {\n  low: 0,\n  high: 1000,\n  showArea: false,\n  height: \"245px\",\n  axisX: {\n    showGrid: false\n  },\n  lineSmooth: true,\n  showLine: true,\n  showPoint: true,\n  fullWidth: true,\n  chartPadding: {\n    right: 50\n  }\n};\nvar responsiveTraffic = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendTraffic = {\n  names: [\"Connections \"],\n  types: [\"info\"]\n};\n\nclass Statistics extends Component {\n  createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n    constructor(props){\n        super(props);\n        this.state = {\n            numberOfUsers : 0,\n            numberOfErrors: 0,\n            numberOfEvents: 0,\n            numberOfSteps: 0\n\n        }\n    }\n    \n    getData(){\n         console.log(\"Getting data..\");\n        var data = [];\n        return getStatisticsDataAPICALL(this.state.object)\n        .then((res) => {\n            console.log(res);\n           data = res.data.data;\n\n             this.setState({\n                 numberOfUsers: data.numberOfUsers,\n                 numberOfErrors: data.numberOfErrors,\n                 numberOfEvents: data.numberOfEvents,\n                 numberOfSteps: data.numberOfSteps\n             })\n//            Pie Data\n            dataPieAcountActivationRatio.series = [data.numberOfActivatedAccounts, data.numberOfUsers-data.numberOfActivatedAccounts] ;\n            dataPieAcountActivationRatio.labels = [(parseInt((data.numberOfActivatedAccounts*100)/data.numberOfUsers)).toString()+\"%\", (parseInt((data.numberOfUsers-data.numberOfActivatedAccounts)*100/data.numberOfUsers)).toString()+\"%\"];\n            \n//            Curve Data\n            dataTraffic.series[0] = data.weeklyTraffic;\n            optionsTraffic.high =  Math.max(data.weeklyTraffic + 50);\n            \n//            Bar Data\n            dataBarEventsStepsTraffic.series[0] = data.eventStepTraffic.events;\n            dataBarEventsStepsTraffic.series[1] = data.eventStepTraffic.steps;\n            \n            this.forceUpdate();\n         });\n    }\n    \n    componentWillMount(){\n        let thing = [];\n        this.getData();\n    }\n  render() {\n    return (\n      <div className=\"content\">\n        <Container fluid>\n          <Row>\n            <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\" text-warning\" class=\"fas fa-shoe-prints\" />}\n                statsText=\"Steps\"\n                statsValue={this.state.numberOfSteps}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText=\"Updated now\"\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"fas fa-calendar-alt text-success\" />}\n                statsText=\"Events\"\n                statsValue={this.state.numberOfEvents}\n                statsIcon={<i className=\"fa fa-calendar-o\" />}\n                statsIconText=\"Last day\"\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                statsText=\"Errors\"\n                statsValue={this.state.numberOfErrors}\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText=\"In the last 12 hours\"\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"fas fa-users text-info\" />}\n                statsText=\"Users\"\n                statsValue={this.state.numberOfUsers}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText=\"Updated now\"\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={8}>\n              <Card\n                statsIcon=\"fa fa-history\"\n                id=\"chartHours\"\n                title=\"Users Traffic\"\n                category=\"7 Days Traffic\"\n                stats=\"Updated just now\"\n                content={\n                  <div className=\"ct-chart\">\n                    <ChartistGraph\n                      data={dataTraffic}\n                      type=\"Line\"\n                      options={optionsTraffic}\n                      responsiveOptions={responsiveTraffic}\n                    />\n                  </div>\n                }\n                legend={\n                  <div className=\"legend\" >{this.createLegend(legendTraffic)}</div>\n                }\n              />\n            </Col>\n            <Col md={4}>\n              <Card\n                title=\"Accounts Statistics\"\n                category=\"Activated Accounts vs Non-Activated Accounts\"\n                stats=\"Updated just now\"\n                statsIcon=\"fa fa-history\"\n                content={\n                  <div\n                    id=\"chartPreferences\"\n                    className=\"ct-chart ct-perfect-fourth\"\n                  >\n                    <ChartistGraph data={dataPieAcountActivationRatio} type=\"Pie\" />\n                  </div>\n                }\n                legend={\n                  <div className=\"legend\">{this.createLegend(legendPieAcountActivationRatio)}</div>\n                }\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col md={6}>\n              <Card\n                id=\"chartActivity\"\n                title=\"Events/Steps Traffic\"\n                stats=\"Updated just now\"\n                statsIcon=\"fa fa-check\"\n                content={\n                  <div className=\"ct-chart\">\n                    <ChartistGraph\n                      data={dataBarEventsStepsTraffic}\n                      type=\"Bar\"\n                      options={optionsBarEventsStepsTraffic}\n                      responsiveOptions={responsiveBarEventsStepsTraffic}\n                    />\n                  </div>\n                }\n                legend={\n                  <div className=\"legend\">{this.createLegend(legendBarEventsStepsTraffic)}</div>\n                }\n              />\n            </Col>\n\n            <Col md={6}>\n              <Card\n                title=\"Tasks\"\n                category=\"Backend development\"\n                stats=\"Updated just now\"\n                statsIcon=\"fa fa-history\"\n                content={\n                  <div className=\"table-full-width\">\n                    <table className=\"table\">\n                      <Tasks />\n                    </table>\n                  </div>\n                }\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}