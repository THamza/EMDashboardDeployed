{"ast":null,"code":"import _classCallCheck from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/src/dashboard/Step/ViewScanners.js\";\nimport React, { Component } from 'react';\nimport { postRemoveUserFromScannerOfStepAPICALL, postAddUserToScannerOfStepAPICALL } from '../../utils/requests';\nimport { withRouter } from 'react-router-dom';\nimport ReactCardFlip from 'react-card-flip';\nimport SearchBar from 'react-search-bar';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { CSVLink } from \"react-csv\";\nvar csvData = [[\"First Name\", \"Last Name\", \"Email\", \"Phone Number\"]];\n\nvar ViewScanners =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewScanners, _Component);\n\n  function ViewScanners(props) {\n    var _this;\n\n    _classCallCheck(this, ViewScanners);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewScanners).call(this, props));\n\n    _this.createTable = function () {\n      var table = [];\n      _this.state.users = _this.props.history.location.state.ScannersReady;\n      console.log(_this.state.users); // Outer loop to create parent\n\n      var arrays = [],\n          size = 5;\n\n      while (_this.state.users.length > 0) {\n        arrays.push(_this.state.users.splice(0, size));\n      }\n\n      {\n        arrays.map(function (array) {\n          var children = []; //Inner loop to create children\n          // for (let j = 0; j < 5; j++) {\n\n          {\n            array.map(function (participant) {\n              if (participant.isDisplayable) {\n                csvData.push([participant.firstName, participant.lastName, participant.email, participant.phoneNumber]);\n                children.push(React.createElement(\"td\", {\n                  key: participant.hashedID.toString(),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 125\n                  },\n                  __self: this\n                }, React.createElement(ReactCardFlip, {\n                  isFlipped: _this.state.isFlipped,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 126\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  key: \"front\",\n                  style: styles.card,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 127\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  style: {\n                    float: 'right'\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 128\n                  },\n                  __self: this\n                }, React.createElement(\"text\", {\n                  style: {\n                    fontWeight: \"bold\",\n                    color: 'gray'\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 129\n                  },\n                  __self: this\n                }, \"Aui ID: \"), React.createElement(\"text\", {\n                  style: {\n                    color: 'gray'\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 130\n                  },\n                  __self: this\n                }, participant.auiID, React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 130\n                  },\n                  __self: this\n                }))), participant.isNew ? React.createElement(\"text\", {\n                  style: {\n                    color: \"red\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 134\n                  },\n                  __self: this\n                }, \"New\") : React.createElement(\"text\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 135\n                  },\n                  __self: this\n                }), React.createElement(\"text\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 137\n                  },\n                  __self: this\n                }, React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 137\n                  },\n                  __self: this\n                }), React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 137\n                  },\n                  __self: this\n                }), \"First Name: \"), React.createElement(\"text\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 138\n                  },\n                  __self: this\n                }, participant.firstName, React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 138\n                  },\n                  __self: this\n                })), React.createElement(\"text\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 139\n                  },\n                  __self: this\n                }, \"Last Name: \"), React.createElement(\"text\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 140\n                  },\n                  __self: this\n                }, participant.lastName, React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 140\n                  },\n                  __self: this\n                })), React.createElement(\"text\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 141\n                  },\n                  __self: this\n                }, \"Email: \"), React.createElement(\"text\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 142\n                  },\n                  __self: this\n                }, participant.email, React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 142\n                  },\n                  __self: this\n                })), React.createElement(\"text\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 143\n                  },\n                  __self: this\n                }, \"Phone Number: \"), React.createElement(\"text\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 144\n                  },\n                  __self: this\n                }, participant.phoneNumber, React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 144\n                  },\n                  __self: this\n                })), React.createElement(\"text\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 145\n                  },\n                  __self: this\n                }, \"System ID: \"), React.createElement(\"text\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 146\n                  },\n                  __self: this\n                }, participant.hashedID, React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 146\n                  },\n                  __self: this\n                }), React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 146\n                  },\n                  __self: this\n                })), React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 148\n                  },\n                  __self: this\n                }, React.createElement(\"button\", {\n                  className: \"btn btn-primary\",\n                  style: {\n                    width: \"100%\"\n                  },\n                  onClick: _this.handleClickCard,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 149\n                  },\n                  __self: this\n                }, \"More info\"), React.createElement(\"button\", {\n                  className: \"btn btn-danger\",\n                  style: {\n                    width: \"100%\"\n                  },\n                  onClick: function onClick() {\n                    var answer = window.prompt(\"Are you sure want to remove this user from the participants list? Please enter the ID of the user:\");\n\n                    if (answer === participant.auiID) {\n                      _this.removeUserFromScannerOfAStep(_this.props.history.location.state.hashedIDEvent, _this.props.history.location.state.hashedIDStep, participant.hashedID, participant.auiID).then(function (isDeleted) {\n                        if (isDeleted) {\n                          participant.isDisplayable = false; // this.forceUpdate();\n\n                          alert(\"Scanner privilege revoked\");\n                        } else {\n                          alert(\"An Error has occurred while revoking the scanner privilege to \" + participant.auiID);\n                        }\n                      });\n                    } else {\n                      alert(\"The IDs don't match. Aborting...\");\n                    }\n\n                    console.log(answer);\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 152\n                  },\n                  __self: this\n                }, \"Remove\"))), React.createElement(\"div\", {\n                  key: \"back\",\n                  style: styles.card,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 176\n                  },\n                  __self: this\n                }, React.createElement(\"text\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 177\n                  },\n                  __self: this\n                }, \"Aui ID: \"), React.createElement(\"text\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 178\n                  },\n                  __self: this\n                }, participant.auiID, React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 178\n                  },\n                  __self: this\n                })), React.createElement(\"text\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 179\n                  },\n                  __self: this\n                }, \"First Name: \"), React.createElement(\"text\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 180\n                  },\n                  __self: this\n                }, participant.firstName, React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 180\n                  },\n                  __self: this\n                })), React.createElement(\"text\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 181\n                  },\n                  __self: this\n                }, \"Last Name: \"), React.createElement(\"text\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 182\n                  },\n                  __self: this\n                }, participant.lastName, React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 182\n                  },\n                  __self: this\n                })), React.createElement(\"text\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 183\n                  },\n                  __self: this\n                }, \"Email: \"), React.createElement(\"text\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 184\n                  },\n                  __self: this\n                }, participant.email, React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 184\n                  },\n                  __self: this\n                })), React.createElement(\"text\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 185\n                  },\n                  __self: this\n                }, \"Country: \"), React.createElement(\"text\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 186\n                  },\n                  __self: this\n                }, participant.country, React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 186\n                  },\n                  __self: this\n                })), React.createElement(\"text\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 187\n                  },\n                  __self: this\n                }, \"Phone Number: \"), React.createElement(\"text\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 188\n                  },\n                  __self: this\n                }, participant.phoneNumber, React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 188\n                  },\n                  __self: this\n                })), React.createElement(\"text\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 189\n                  },\n                  __self: this\n                }, \"System ID: \"), React.createElement(\"text\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 190\n                  },\n                  __self: this\n                }, participant.hashedID, React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 190\n                  },\n                  __self: this\n                })), React.createElement(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: _this.handleClickCard,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 192\n                  },\n                  __self: this\n                }, \"Back\")))));\n              }\n            });\n          } // }\n          //Create the parent and add the children\n\n          table.push(React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          }, children));\n        });\n      }\n      return table;\n    };\n\n    _this.state = {\n      users: [],\n      isFlipped: false,\n      toSearch: \"\"\n    };\n    console.log(\"___________________________________________________________________________\");\n    console.log(\"ScannersReadyIDs\");\n    console.log(_this.props.history.location.state.ScannersReady); // schemaParticipants.properties.listOfStrings.push(this.props.history.location.state.ParticipantIDs[0]);\n\n    _this.setState({\n      users: _this.props.history.location.state.ScannersReady\n    }); // Bind\n\n\n    _this.handleClickCard = _this.handleClickCard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSearch = _this.handleSearch.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ViewScanners, [{\n    key: \"handleClickCard\",\n    value: function handleClickCard(e) {\n      //Move to update user\n      e.preventDefault();\n      this.setState(function (prevState) {\n        return {\n          isFlipped: !prevState.isFlipped\n        };\n      });\n      console.log(\"Switching to:\" + this.state.isFlipped);\n    }\n  }, {\n    key: \"handleSearch\",\n    value: function handleSearch(text, currentUsers) {\n      var _this2 = this;\n\n      console.log(text); //Check if it contains digits only and is 5 characters long\n      // if(!(/^\\d+$/.test(text)) || (text.length !== 5)){\n\n      if (!/^\\d+$/.test(text)) {\n        alert(\"Invalid ID\");\n        return;\n      }\n\n      return postAddUserToScannerOfStepAPICALL(this.props.history.location.state.hashedIDEvent, this.props.history.location.state.hashedIDStep, text, currentUsers).then(function (res) {\n        if (res.data.status === \"success\") {\n          // console.log(res.data.data.userData);\n          alert(\"User was added successfully\"); // for (let i = 0; i < this.state.users; i++) {\n          //     this.state.user.unshift(this.state.users[i]);\n          // }\n          // this.setState()\n          // console.log(\"__________\");\n          // console.log(currentUsers);\n          // this.props.history.location.state.ScannersReady.unshift(res.data.data.userData);\n          // console.log(this.props.history.location.state.ScannersReady);\n\n          _this2.setState({\n            users: _this2.props.history.location.state.ScannersReady\n          });\n\n          alert(\"User added successfully\"); // this.forceUpdate();\n        } else {\n          alert(\"An error has occurred while while adding \" + text);\n        }\n      });\n    }\n  }, {\n    key: \"removeUserFromScannerOfAStep\",\n    value: function removeUserFromScannerOfAStep(hashedIDEvent, hashedIDStep, hashedID, auiID) {\n      return postRemoveUserFromScannerOfStepAPICALL(hashedIDEvent, hashedIDStep, hashedID).then(function (isDeleted) {\n        return isDeleted;\n      });\n    } // removeUserFromList(hashedID){\n    //     console.log(\"HERE\");\n    //     console.log(this.state.users.length);\n    //     for (let i =0; i < this.state.users.length; i++)\n    //         if (this.state.users[i].hashedID === hashedID) {\n    //             this.state.users.splice(i,1);\n    //             alert(\"User removed successfully\");\n    //             this.forceUpdate();\n    //             break;\n    //         }\n    // }\n\n  }, {\n    key: \"render\",\n    // onSearch(inputID){\n    //     return getUserData(inputID)\n    //         .then(data => {\n    //                if(Object.entries(data).length === 0 && data.constructor === Object){\n    //                     alert(\"User not found\");\n    //                }else{\n    //                     //insert object in the begining of this.state.user\n    //                    //maybe also add a new flag that would mean thtt the user was newly added\n    //                      alert(\"User Was added successfully\");\n    //                      //Use unshift\n    //                }\n    //             }\n    //         )\n    // }\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title\",\n        style: {\n          marginBottom: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Step Scanners\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(CSVLink, {\n        filename: \"step_scanners.csv\",\n        data: csvData,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Download CSV File\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          float: 'right',\n          marginTop: '0px'\n        },\n        className: \"btn btn-info\",\n        onClick: function onClick() {\n          _this3.handleSearch(_this3.state.toSearch, _this3.state.users);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Add\"), React.createElement(SearchBar, {\n        style: {\n          flexDirection: \"row\",\n          float: 'right',\n          marginTop: '2px',\n          marginBottom: '30px',\n          width: '30%'\n        },\n        placeholder: \"Please enter an ID\",\n        onChange: function onChange(newString) {\n          _this3.setState({\n            toSearch: newString\n          });\n        },\n        onSearch: this.handleSearch,\n        suggestions: [],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }))), React.createElement(\"label\", {\n        style: {\n          marginBottom: '50px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Number of Scanners: \", this.props.history.location.state.ScannersReady.length), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, this.createTable()));\n    }\n  }]);\n\n  return ViewScanners;\n}(Component);\n\nvar styles = {\n  card: {\n    border: '1px solid #eeeeee',\n    borderRadius: '3px',\n    padding: '15px',\n    width: '250px'\n  },\n  image: {\n    height: '200px',\n    width: '250px'\n  },\n  buttonStyleContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    marginHorizontal: 20,\n    marginTop: 5\n  }\n};\nexport default withRouter(ViewScanners);","map":{"version":3,"sources":["/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/src/dashboard/Step/ViewScanners.js"],"names":["React","Component","postRemoveUserFromScannerOfStepAPICALL","postAddUserToScannerOfStepAPICALL","withRouter","ReactCardFlip","SearchBar","CSVLink","csvData","ViewScanners","props","createTable","table","state","users","history","location","ScannersReady","console","log","arrays","size","length","push","splice","map","array","children","participant","isDisplayable","firstName","lastName","email","phoneNumber","hashedID","toString","isFlipped","styles","card","float","fontWeight","color","auiID","isNew","width","handleClickCard","answer","window","prompt","removeUserFromScannerOfAStep","hashedIDEvent","hashedIDStep","then","isDeleted","alert","country","toSearch","setState","bind","handleSearch","e","preventDefault","prevState","text","currentUsers","test","res","data","status","marginBottom","marginTop","flexDirection","newString","border","borderRadius","padding","image","height","buttonStyleContainer","flex","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n    postRemoveUserFromScannerOfStepAPICALL,\n    postAddUserToScannerOfStepAPICALL\n} from '../../utils/requests';\nimport {withRouter} from 'react-router-dom';\nimport ReactCardFlip from 'react-card-flip';\nimport SearchBar from 'react-search-bar';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { CSVLink } from \"react-csv\";\n\nlet csvData= [[\"First Name\", \"Last Name\", \"Email\", \"Phone Number\"]];\n\n\nclass ViewScanners extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n        users: [],\n        isFlipped: false,\n        toSearch: \"\"\n    };\n    console.log(\"___________________________________________________________________________\");\n    console.log(\"ScannersReadyIDs\");\n    console.log(this.props.history.location.state.ScannersReady);\n      // schemaParticipants.properties.listOfStrings.push(this.props.history.location.state.ParticipantIDs[0]);\n\n      this.setState({\n          users: this.props.history.location.state.ScannersReady\n      });\n\n\n    // Bind\n      this.handleClickCard = this.handleClickCard.bind(this);\n      this.handleSearch = this.handleSearch.bind(this);\n  }\n\n\n    handleClickCard(e) {\n      //Move to update user\n        e.preventDefault();\n        this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\n        console.log(\"Switching to:\" + this.state.isFlipped);\n    }\n\n    handleSearch(text, currentUsers){\n\n        console.log(text);\n\n        //Check if it contains digits only and is 5 characters long\n        // if(!(/^\\d+$/.test(text)) || (text.length !== 5)){\n        if(!(/^\\d+$/.test(text))){\n            alert(\"Invalid ID\");\n            return;\n        }\n\n        return postAddUserToScannerOfStepAPICALL(this.props.history.location.state.hashedIDEvent, this.props.history.location.state.hashedIDStep, text, currentUsers)\n            .then((res) => {\n                if(res.data.status === \"success\"){\n                    // console.log(res.data.data.userData);\n                    alert(\"User was added successfully\");\n                    // for (let i = 0; i < this.state.users; i++) {\n                    //     this.state.user.unshift(this.state.users[i]);\n                    // }\n                    // this.setState()\n                    // console.log(\"__________\");\n                    // console.log(currentUsers);\n                    // this.props.history.location.state.ScannersReady.unshift(res.data.data.userData);\n                    // console.log(this.props.history.location.state.ScannersReady);\n                    this.setState({\n                        users: this.props.history.location.state.ScannersReady\n                    });\n                    alert(\"User added successfully\");\n\n                    // this.forceUpdate();\n                }else{\n                    alert(\"An error has occurred while while adding \" + text)\n                }\n            })\n    }\n\n\n    removeUserFromScannerOfAStep(hashedIDEvent, hashedIDStep, hashedID, auiID){\n\n        return postRemoveUserFromScannerOfStepAPICALL(hashedIDEvent, hashedIDStep, hashedID)\n            .then(isDeleted => {\n                return isDeleted;\n            })\n    }\n\n    // removeUserFromList(hashedID){\n    //     console.log(\"HERE\");\n    //     console.log(this.state.users.length);\n    //     for (let i =0; i < this.state.users.length; i++)\n    //         if (this.state.users[i].hashedID === hashedID) {\n    //             this.state.users.splice(i,1);\n    //             alert(\"User removed successfully\");\n    //             this.forceUpdate();\n    //             break;\n    //         }\n    // }\n\n    createTable = () => {\n        let table = [];\n        this.state.users = this.props.history.location.state.ScannersReady;\n\n        console.log(this.state.users);\n        // Outer loop to create parent\n\n        let arrays = [], size = 5;\n\n        while (this.state.users.length > 0)\n            arrays.push(this.state.users.splice(0, size));\n\n        {arrays.map((array => {\n                let children = [];\n                //Inner loop to create children\n                // for (let j = 0; j < 5; j++) {\n                {array.map(participant => {\n                    if(participant.isDisplayable){\n                        csvData.push([participant.firstName, participant.lastName, participant.email, participant.phoneNumber]);\n\n                        children.push(\n                        <td key={participant.hashedID.toString()}>\n                            <ReactCardFlip isFlipped={this.state.isFlipped}>\n                                <div key=\"front\" style={styles.card}>\n                                    <div style={{float: 'right'}}>\n                                        <text style={{fontWeight: \"bold\", color:'gray'}}>Aui ID: </text>\n                                        <text style={{color:'gray'}}>{participant.auiID}<br/></text>\n                                    </div>\n                                    {\n                                        (participant.isNew)?\n                                            <text style={{color: \"red\"}}>New</text>\n                                            :<text></text>\n                                    }\n                                    <text style={{fontWeight: \"bold\"}}><br/><br/>First Name: </text>\n                                    <text>{participant.firstName}<br/></text>\n                                    <text style={{fontWeight: \"bold\"}}>Last Name: </text>\n                                    <text>{participant.lastName}<br/></text>\n                                    <text style={{fontWeight: \"bold\"}}>Email: </text>\n                                    <text>{participant.email}<br/></text>\n                                    <text style={{fontWeight: \"bold\"}}>Phone Number: </text>\n                                    <text>{participant.phoneNumber}<br/></text>\n                                    <text style={{fontWeight: \"bold\"}}>System ID: </text>\n                                    <text>{participant.hashedID}<br/><br/></text>\n\n                                    <div >\n                                        <button className='btn btn-primary' style={{width: \"100%\"}} onClick={this.handleClickCard}>\n                                            More info\n                                        </button>\n                                        <button  className='btn btn-danger' style={{width: \"100%\"}} onClick={()=>{\n                                            let answer = window.prompt(\"Are you sure want to remove this user from the participants list? Please enter the ID of the user:\")\n                                            if(answer === participant.auiID){\n                                                this.removeUserFromScannerOfAStep(this.props.history.location.state.hashedIDEvent, this.props.history.location.state.hashedIDStep ,participant.hashedID, participant.auiID)\n                                                    .then((isDeleted)=>{\n                                                        if(isDeleted){\n                                                            participant.isDisplayable = false;\n                                                            // this.forceUpdate();\n                                                            alert(\"Scanner privilege revoked\");\n\n                                                        }else{\n                                                            alert(\"An Error has occurred while revoking the scanner privilege to \" + participant.auiID);\n                                                        }\n                                                    })\n                                            }else{\n                                                alert(\"The IDs don't match. Aborting...\")\n                                            }\n                                            console.log(answer);\n                                        }}>\n                                            Remove\n                                        </button>\n                                    </div>\n                                </div>\n\n                                <div key=\"back\" style={styles.card}>\n                                    <text style={{fontWeight: \"bold\"}}>Aui ID: </text>\n                                    <text>{participant.auiID}<br/></text>\n                                    <text style={{fontWeight: \"bold\"}}>First Name: </text>\n                                    <text>{participant.firstName}<br/></text>\n                                    <text style={{fontWeight: \"bold\"}}>Last Name: </text>\n                                    <text>{participant.lastName}<br/></text>\n                                    <text style={{fontWeight: \"bold\"}}>Email: </text>\n                                    <text>{participant.email}<br/></text>\n                                    <text style={{fontWeight: \"bold\"}}>Country: </text>\n                                    <text>{participant.country}<br/></text>\n                                    <text style={{fontWeight: \"bold\"}}>Phone Number: </text>\n                                    <text>{participant.phoneNumber}<br/></text>\n                                    <text style={{fontWeight: \"bold\"}}>System ID: </text>\n                                    <text>{participant.hashedID}<br/></text>\n\n                                    <button className='btn btn-primary' onClick={this.handleClickCard}>\n                                        Back\n                                    </button>\n                                    {/*<button className='btn btn-info' onClick={() => {}}>*/}\n                                    {/*More Info ...*/}\n                                    {/*</button>*/}\n                                </div>\n                            </ReactCardFlip>\n                        </td>)\n                    }\n                })}\n\n                // }\n                //Create the parent and add the children\n                table.push(<tr>{children}</tr>)\n        }))}\n\n        return table\n    };\n\n    // onSearch(inputID){\n    //     return getUserData(inputID)\n    //         .then(data => {\n    //                if(Object.entries(data).length === 0 && data.constructor === Object){\n    //                     alert(\"User not found\");\n    //                }else{\n    //                     //insert object in the begining of this.state.user\n    //                    //maybe also add a new flag that would mean thtt the user was newly added\n    //                      alert(\"User Was added successfully\");\n    //                      //Use unshift\n    //                }\n    //             }\n    //         )\n    // }\n\n  render () {\n    return (\n        <div>\n            <h2 className='title' style={{marginBottom: '20px'}}>Step Scanners</h2>\n            <div>\n                <CSVLink filename={\"step_scanners.csv\"} data={csvData} className=\"btn btn-primary\">Download CSV File</CSVLink>\n                <div>\n                    <button style={{float: 'right', marginTop: '0px'}} className='btn btn-info' onClick={()=>{\n                        this.handleSearch(this.state.toSearch, this.state.users);\n                    }}>\n                        Add\n                    </button>\n                    <SearchBar\n                        style={{flexDirection:\"row\", float: 'right', marginTop: '2px', marginBottom: '30px',  width: '30%'}}\n                        placeholder=\"Please enter an ID\"\n                        onChange={(newString) => {\n                            this.setState({\n                                toSearch: newString\n                            })\n                        }}\n                        onSearch={this.handleSearch}\n                        suggestions={[]}/>\n\n                </div>\n            </div>\n            <label style={{marginBottom: '50px'}}>Number of Scanners: {this.props.history.location.state.ScannersReady.length}</label>\n\n            <table>\n                {this.createTable()}\n            </table>\n        </div>\n    )\n  }\n}\n\nconst styles = {\n    card: {\n        border: '1px solid #eeeeee',\n        borderRadius: '3px',\n        padding: '15px',\n        width: '250px'\n    },\n    image: {\n        height: '200px',\n        width: '250px'\n    },\n    buttonStyleContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        marginHorizontal: 20,\n        marginTop: 5,\n    }\n};\n\n\nexport default withRouter(ViewScanners);"]},"metadata":{},"sourceType":"module"}