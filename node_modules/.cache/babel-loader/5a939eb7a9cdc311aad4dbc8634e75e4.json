{"ast":null,"code":"import { getTableData } from './requests';\n\nfunction getLinkOptions(column) {\n  var link = column.link;\n  return getTableData(link.object).then(function (res) {\n    if (res.data.success) {\n      var values = [];\n\n      for (var idx in res.data.result) {\n        var element = res.data.result[idx];\n        var id = element[link.attribute];\n        var shown = '';\n\n        for (var idx1 in link.shown) {\n          shown += element[link.shown[idx1]] + ' ';\n        }\n\n        var value = {\n          value: id,\n          label: shown,\n          name: column.accessor\n        };\n        values.push(value);\n      }\n\n      return values;\n    } else {\n      return console.log(res.data.message);\n    }\n  }).catch(function (err) {\n    return console.error(err);\n  });\n}\n\nfunction convertInfo(link) {\n  var object = link.object,\n      attribute = link.attribute,\n      shown = link.shown,\n      rows = link.rows; // let object = 'beneficiary';\n  // let attribute = '_id';\n  // let shown = ['lastName','firstName']\n  // let rows = ['5c9a027ad81d90273713e3b4','5c9a5da496f511138b3dfbfc']\n\n  console.log(link);\n  var result = {};\n  return getTableData(object).then(function (res) {\n    var data = res.data.result;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var datum = _step.value;\n\n        if (rows.includes(datum[attribute])) {\n          var toShow = '';\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = shown[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var shownAttribute = _step2.value;\n              toShow += datum[shownAttribute] + ' ';\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          result[datum[attribute]] = toShow;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    console.log(result);\n    return result;\n  });\n}\n\nexport { getLinkOptions, convertInfo };","map":{"version":3,"sources":["/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/src/utils/masks.js"],"names":["getTableData","getLinkOptions","column","link","object","then","res","data","success","values","idx","result","element","id","attribute","shown","idx1","value","label","name","accessor","push","console","log","message","catch","err","error","convertInfo","rows","datum","includes","toShow","shownAttribute"],"mappings":"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","sourcesContent":["import {getTableData} from './requests';\n\nfunction getLinkOptions(column){\n  let link = column.link;\n  return getTableData(link.object)\n  .then((res) => {\n    if(res.data.success){\n      let values = [];\n      for (const idx in res.data.result){\n        let element = res.data.result[idx];\n        let id = element[link.attribute];\n        let shown = '';\n        for (const idx1 in link.shown){\n          shown+= element[link.shown[idx1]] + ' ';\n        }\n        let value = {value: id, label: shown, name: column.accessor}\n        values.push(value);\n      }\n      return values;\n    }\n    else{\n      return console.log(res.data.message)\n    }\n  })\n  .catch((err) => {\n    return console.error(err);\n  })\n}\n\n\nfunction convertInfo(link){\n  let {object, attribute, shown, rows} = link;\n  // let object = 'beneficiary';\n  // let attribute = '_id';\n  // let shown = ['lastName','firstName']\n  // let rows = ['5c9a027ad81d90273713e3b4','5c9a5da496f511138b3dfbfc']\n  console.log(link);\n  let result = {};\n  return getTableData(object)\n  .then((res) => {\n    let data = res.data.result;\n    for (let datum of data){\n      if(rows.includes(datum[attribute])){\n        let toShow = '';\n        for (let shownAttribute of shown){\n          toShow+= datum[shownAttribute]+' '\n        }\n        result[datum[attribute]] = toShow;\n      }\n    }\n    console.log(result);\n    return result;\n  })\n}\n\nexport {getLinkOptions, convertInfo};\n"]},"metadata":{},"sourceType":"module"}