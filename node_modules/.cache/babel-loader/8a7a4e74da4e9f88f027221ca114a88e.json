{"ast":null,"code":"import _classCallCheck from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/src/dashboard/Step/stepStatistics.js\";\nimport React, { Component } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { getStepStatisticsDataAPICALL } from '../../utils/requests';\nimport { withRouter } from 'react-router-dom';\nimport { Card } from \"../../components/Card/Card.jsx\";\nimport { StatsCard } from \"../../components/StatsCard/StatsCard.jsx\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nvar dataPieCompletedRatio = {\n  labels: [],\n  series: []\n};\nvar legendPieCompletedRatio = {\n  names: [\"Completed\", \"Participants\"],\n  types: [\"info\", \"danger\"]\n};\nvar dataPieScannersRatio = {\n  labels: [],\n  series: []\n};\nvar legendPieScannersRatio = {\n  names: [\"Event Scanners\", \"Step Scanners\"],\n  types: [\"info\", \"danger\"]\n};\nvar dataStepCompletionTraffic = {\n  labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n  series: [[]]\n};\nvar optionsStepCompletionTraffic = {\n  low: 0,\n  high: 1000,\n  showArea: false,\n  height: \"245px\",\n  axisX: {\n    showGrid: false\n  },\n  lineSmooth: true,\n  showLine: true,\n  showPoint: true,\n  fullWidth: true,\n  chartPadding: {\n    right: 50\n  }\n};\nvar responsiveStepCompletionTraffic = [[\"screen and (max-width: 640px)\", {\n  axisX: {\n    labelInterpolationFnc: function labelInterpolationFnc(value) {\n      return value[0];\n    }\n  }\n}]];\nvar legendStepCompletionTraffic = {\n  names: [\"Connections \"],\n  types: [\"info\"]\n};\n\nvar stepStatistics =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(stepStatistics, _Component);\n\n  _createClass(stepStatistics, [{\n    key: \"createLegend\",\n    value: function createLegend(json) {\n      var legend = [];\n\n      for (var i = 0; i < json[\"names\"].length; i++) {\n        var type = \"fa fa-circle text-\" + json[\"types\"][i];\n        legend.push(React.createElement(\"i\", {\n          className: type,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }));\n        legend.push(\" \");\n        legend.push(json[\"names\"][i]);\n      }\n\n      return legend;\n    }\n  }]);\n\n  function stepStatistics(props) {\n    var _this;\n\n    _classCallCheck(this, stepStatistics);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(stepStatistics).call(this, props));\n    _this.state = {\n      numberOfParticipants: 0,\n      numberOfCompleted: 0,\n      numberOfStepScanners: 0,\n      numberOfEventScanners: 0,\n      stepCompletionWeeklyTraffic: []\n    };\n    return _this;\n  }\n\n  _createClass(stepStatistics, [{\n    key: \"getData\",\n    value: function getData() {\n      var _this2 = this;\n\n      console.log(\"Getting data..\");\n      var data = [];\n      return getStepStatisticsDataAPICALL(this.props.history.location.state.hashedIDEvent, this.props.history.location.state.hashedIDStep).then(function (res) {\n        console.log(res);\n        data = res.data.data;\n\n        _this2.setState({\n          numberOfParticipants: data.numberOfParticipants,\n          numberOfCompleted: data.numberOfCompleted,\n          numberOfStepScanners: data.numberOfStepScanners,\n          numberOfEventScanners: data.numberOfEventScanners,\n          stepCompletionWeeklyTraffic: data.stepCompletionWeeklyTraffic\n        }); // Pie Data Scanners vs Users\n\n\n        dataPieCompletedRatio.series = [data.numberOfCompleted, data.numberOfParticipants - data.numberOfCompleted];\n        dataPieCompletedRatio.labels = [parseInt(data.numberOfCompleted * 100 / data.numberOfParticipants).toString() + \"%\", parseInt((data.numberOfParticipants - data.numberOfCompleted) * 100 / data.numberOfParticipants).toString() + \"%\"]; // Pie Data Participants vs Fully Complted\n\n        dataPieScannersRatio.series = [data.numberOfStepScanners, data.numberOfEventScanners - data.numberOfStepScanners];\n        dataPieScannersRatio.labels = [parseInt(data.numberOfStepScanners * 100 / data.numberOfEventScanners).toString() + \"%\", parseInt((data.numberOfEventScanners - data.numberOfStepScanners) * 100 / data.numberOfEventScanners).toString() + \"%\"]; // //            Curve Data\n\n        dataStepCompletionTraffic.series[0] = data.stepCompletionWeeklyTraffic;\n        optionsStepCompletionTraffic.high = Math.max(data.stepCompletionWeeklyTraffic + 50); //\n        // //            Bar Data\n        //             dataBarEventsStepsTraffic.series[0] = data.eventStepTraffic.events;\n        //             dataBarEventsStepsTraffic.series[1] = data.eventStepTraffic.steps;\n\n        _this2.forceUpdate();\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var thing = [];\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(StatsCard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"text-warning\",\n          class: \"fa fa-qrcode\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }),\n        statsText: \"Event Scanners\",\n        statsValue: this.state.numberOfEventScanners,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-refresh\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }),\n        statsIconText: \"Updated now\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(StatsCard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"fas fa-shoe-prints\",\n          style: {\n            color: 'blue'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }),\n        statsText: \"Step Scanners\",\n        statsValue: this.state.numberOfStepScanners,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-calendar-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }),\n        statsIconText: \"Last day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(StatsCard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"fa fa-check\",\n          style: {\n            color: 'green'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }),\n        statsText: \"Completed\",\n        statsValue: this.state.numberOfCompleted,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-clock-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }),\n        statsIconText: \"In the last 12 hours\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(StatsCard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"fas fa-users text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }),\n        statsText: \"Participants\",\n        statsValue: this.state.numberOfParticipants,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-refresh\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }),\n        statsIconText: \"Updated now\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Completion Ratio\",\n        category: \"Completed vs Participants\",\n        stats: \"Updated just now\",\n        statsIcon: \"fa fa-history\",\n        content: React.createElement(\"div\", {\n          id: \"chartPreferences\",\n          className: \"ct-chart ct-perfect-fourth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(ChartistGraph, {\n          data: dataPieCompletedRatio,\n          type: \"Pie\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        })),\n        legend: React.createElement(\"div\", {\n          className: \"legend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, this.createLegend(legendPieCompletedRatio)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Scanner's Ratop\",\n        category: \"Event Scanners vs Step Scanners\",\n        stats: \"Updated just now\",\n        statsIcon: \"fa fa-history\",\n        content: React.createElement(\"div\", {\n          id: \"chartPreferences\",\n          className: \"ct-chart ct-perfect-fourth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, React.createElement(ChartistGraph, {\n          data: dataPieScannersRatio,\n          type: \"Pie\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        })),\n        legend: React.createElement(\"div\", {\n          className: \"legend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, this.createLegend(legendPieScannersRatio)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Card, {\n        statsIcon: \"fa fa-history\",\n        id: \"chartHours\",\n        title: \"Step Completion Traffic\",\n        category: \"7 Days Traffic\",\n        stats: \"Updated just now\",\n        content: React.createElement(\"div\", {\n          className: \"ct-chart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(ChartistGraph, {\n          data: dataStepCompletionTraffic,\n          type: \"Line\",\n          options: optionsStepCompletionTraffic,\n          responsiveOptions: responsiveStepCompletionTraffic,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        })),\n        legend: React.createElement(\"div\", {\n          className: \"legend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, this.createLegend(legendStepCompletionTraffic)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return stepStatistics;\n}(Component);\n\nexport default withRouter(stepStatistics);","map":{"version":3,"sources":["/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/src/dashboard/Step/stepStatistics.js"],"names":["React","Component","ChartistGraph","Container","Row","Col","getStepStatisticsDataAPICALL","withRouter","Card","StatsCard","dataPieCompletedRatio","labels","series","legendPieCompletedRatio","names","types","dataPieScannersRatio","legendPieScannersRatio","dataStepCompletionTraffic","optionsStepCompletionTraffic","low","high","showArea","height","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","right","responsiveStepCompletionTraffic","labelInterpolationFnc","value","legendStepCompletionTraffic","stepStatistics","json","legend","i","length","type","push","props","state","numberOfParticipants","numberOfCompleted","numberOfStepScanners","numberOfEventScanners","stepCompletionWeeklyTraffic","console","log","data","history","location","hashedIDEvent","hashedIDStep","then","res","setState","parseInt","toString","Math","max","forceUpdate","thing","getData","color","justifyContent","alignItems","createLegend"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport {getStepStatisticsDataAPICALL} from '../../utils/requests';\n\nimport {withRouter} from 'react-router-dom';\n\nimport { Card } from \"../../components/Card/Card.jsx\";\nimport { StatsCard } from \"../../components/StatsCard/StatsCard.jsx\";\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nlet dataPieCompletedRatio = {\n    labels: [],\n    series: []\n};\nlet legendPieCompletedRatio = {\n    names: [\"Completed\", \"Participants\"],\n    types: [\"info\", \"danger\"]\n};\n\nlet dataPieScannersRatio = {\n    labels: [],\n    series: []\n};\nlet legendPieScannersRatio = {\n    names: [\"Event Scanners\", \"Step Scanners\"],\n    types: [\"info\", \"danger\"]\n};\n\n\nvar dataStepCompletionTraffic = {\n  labels: [\n    \"Mon\",\n    \"Tue\",\n    \"Wed\",\n    \"Thu\",\n    \"Fri\",\n    \"Sat\",\n    \"Sun\"\n  ],\n  series: [\n    [],\n  ]\n};\nvar optionsStepCompletionTraffic = {\n  low: 0,\n  high: 1000,\n  showArea: false,\n  height: \"245px\",\n  axisX: {\n    showGrid: false\n  },\n  lineSmooth: true,\n  showLine: true,\n  showPoint: true,\n  fullWidth: true,\n  chartPadding: {\n    right: 50\n  }\n};\nvar responsiveStepCompletionTraffic = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendStepCompletionTraffic = {\n  names: [\"Connections \"],\n  types: [\"info\"]\n};\n\nclass stepStatistics extends Component {\n  createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n    constructor(props){\n        super(props);\n        this.state = {\n            numberOfParticipants: 0,\n            numberOfCompleted: 0,\n            numberOfStepScanners: 0,\n            numberOfEventScanners: 0,\n            stepCompletionWeeklyTraffic: []\n\n        }\n    }\n    \n    getData(){\n         console.log(\"Getting data..\");\n        let data = [];\n        return getStepStatisticsDataAPICALL(this.props.history.location.state.hashedIDEvent, this.props.history.location.state.hashedIDStep)\n        .then((res) => {\n            console.log(res);\n           data = res.data.data;\n\n             this.setState({\n                 numberOfParticipants: data.numberOfParticipants,\n                 numberOfCompleted: data.numberOfCompleted,\n                 numberOfStepScanners: data.numberOfStepScanners,\n                 numberOfEventScanners: data.numberOfEventScanners,\n                 stepCompletionWeeklyTraffic: data.stepCompletionWeeklyTraffic\n             });\n\n             // Pie Data Scanners vs Users\n            dataPieCompletedRatio.series = [data.numberOfCompleted, data.numberOfParticipants-data.numberOfCompleted] ;\n            dataPieCompletedRatio.labels = [(parseInt((data.numberOfCompleted*100)/data.numberOfParticipants)).toString()+\"%\", (parseInt((data.numberOfParticipants-data.numberOfCompleted)*100/data.numberOfParticipants)).toString()+\"%\"];\n\n            // Pie Data Participants vs Fully Complted\n            dataPieScannersRatio.series = [data.numberOfStepScanners, data.numberOfEventScanners-data.numberOfStepScanners] ;\n            dataPieScannersRatio.labels = [(parseInt((data.numberOfStepScanners*100)/data.numberOfEventScanners)).toString()+\"%\", (parseInt((data.numberOfEventScanners-data.numberOfStepScanners)*100/data.numberOfEventScanners)).toString()+\"%\"];\n\n// //            Curve Data\n            dataStepCompletionTraffic.series[0] = data.stepCompletionWeeklyTraffic;\n            optionsStepCompletionTraffic.high =  Math.max(data.stepCompletionWeeklyTraffic + 50);\n//\n// //            Bar Data\n//             dataBarEventsStepsTraffic.series[0] = data.eventStepTraffic.events;\n//             dataBarEventsStepsTraffic.series[1] = data.eventStepTraffic.steps;\n            \n            this.forceUpdate();\n         });\n    }\n    \n    componentWillMount(){\n        let thing = [];\n        this.getData();\n    }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Container fluid>\n          <Row>\n            <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"text-warning\" class=\"fa fa-qrcode\" />}\n                statsText=\"Event Scanners\"\n                statsValue={this.state.numberOfEventScanners}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText=\"Updated now\"\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"fas fa-shoe-prints\" style={{color:'blue'}}/>}\n                statsText=\"Step Scanners\"\n                statsValue={this.state.numberOfStepScanners}\n                statsIcon={<i className=\"fa fa-calendar-o\" />}\n                statsIconText=\"Last day\"\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"fa fa-check\" style={{color:'green'}}/>}\n                statsText=\"Completed\"\n                statsValue={this.state.numberOfCompleted}\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText=\"In the last 12 hours\"\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"fas fa-users text-info\" />}\n                statsText=\"Participants\"\n                statsValue={this.state.numberOfParticipants}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText=\"Updated now\"\n              />\n            </Col>\n          </Row>\n            <Row style={{justifyContent:'center', alignItems:'center'}}>\n                <Col md={4}>\n                    <Card\n                        title=\"Completion Ratio\"\n                        category=\"Completed vs Participants\"\n                        stats=\"Updated just now\"\n                        statsIcon=\"fa fa-history\"\n                        content={\n                            <div\n                                id=\"chartPreferences\"\n                                className=\"ct-chart ct-perfect-fourth\"\n                            >\n                                <ChartistGraph data={dataPieCompletedRatio} type=\"Pie\" />\n                            </div>\n                        }\n                        legend={\n                            <div className=\"legend\">{this.createLegend(legendPieCompletedRatio)}</div>\n                        }\n                    />\n                </Col>\n                <Col md={4}>\n                    <Card\n                        title=\"Scanner's Ratop\"\n                        category=\"Event Scanners vs Step Scanners\"\n                        stats=\"Updated just now\"\n                        statsIcon=\"fa fa-history\"\n                        content={\n                            <div\n                                id=\"chartPreferences\"\n                                className=\"ct-chart ct-perfect-fourth\"\n                            >\n                                <ChartistGraph data={dataPieScannersRatio} type=\"Pie\" />\n                            </div>\n                        }\n                        legend={\n                            <div className=\"legend\">{this.createLegend(legendPieScannersRatio)}</div>\n                        }\n                    />\n                </Col>\n            </Row>\n\n            <Row style={{justifyContent:'center', alignItems:'center'}}>\n                <Col md={8}>\n                    <Card\n                        statsIcon=\"fa fa-history\"\n                        id=\"chartHours\"\n                        title=\"Step Completion Traffic\"\n                        category=\"7 Days Traffic\"\n                        stats=\"Updated just now\"\n                        content={\n                            <div className=\"ct-chart\">\n                                <ChartistGraph\n                                    data={dataStepCompletionTraffic}\n                                    type=\"Line\"\n                                    options={optionsStepCompletionTraffic}\n                                    responsiveOptions={responsiveStepCompletionTraffic}\n                                />\n                            </div>\n                        }\n                        legend={\n                            <div className=\"legend\" >{this.createLegend(legendStepCompletionTraffic)}</div>\n                        }\n                    />\n                </Col>\n            </Row>\n\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(stepStatistics);\n"]},"metadata":{},"sourceType":"module"}