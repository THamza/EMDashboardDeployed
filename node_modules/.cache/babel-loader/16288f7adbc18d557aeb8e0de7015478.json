{"ast":null,"code":"import _classCallCheck from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/src/dashboard/Event/eventStatistics.js\";\nimport React, { Component } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { getEventStatisticsDataAPICALL } from '../../utils/requests';\nimport { withRouter } from 'react-router-dom';\nimport { Card } from \"../../components/Card/Card.jsx\";\nimport { StatsCard } from \"../../components/StatsCard/StatsCard.jsx\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nvar dataPieAccountScannersRatio = {\n  labels: [],\n  series: []\n};\nvar legendPieAccountScannersRatio = {\n  names: [\"Scanners\", \"Users\"],\n  types: [\"info\", \"danger\"]\n};\nvar dataPieAccountFullyCompletedRatio = {\n  labels: [],\n  series: []\n};\nvar legendPieAccountFullyCompletedRatio = {\n  names: [\"Participants\", \"Fully Completed\"],\n  types: [\"info\", \"danger\"]\n};\nvar dataPieAccountParticipantsRatio = {\n  labels: [],\n  series: []\n};\nvar legendPieAccountParticipantsRatio = {\n  names: [\"Participants\", \"Users\"],\n  types: [\"info\", \"danger\"]\n};\nvar dataStepCompletionTraffic = {\n  labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n  series: [[]]\n};\nvar optionsStepCompletionTraffic = {\n  low: 0,\n  high: 1000,\n  showArea: false,\n  height: \"245px\",\n  axisX: {\n    showGrid: false\n  },\n  lineSmooth: true,\n  showLine: true,\n  showPoint: true,\n  fullWidth: true,\n  chartPadding: {\n    right: 50\n  }\n};\nvar responsiveStepCompletionTraffic = [[\"screen and (max-width: 640px)\", {\n  axisX: {\n    labelInterpolationFnc: function labelInterpolationFnc(value) {\n      return value[0];\n    }\n  }\n}]];\nvar legendStepCompletionTraffic = {\n  names: [\"Completions \"],\n  types: [\"info\"]\n};\n\nvar eventStatistics =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(eventStatistics, _Component);\n\n  _createClass(eventStatistics, [{\n    key: \"createLegend\",\n    value: function createLegend(json) {\n      var legend = [];\n\n      for (var i = 0; i < json[\"names\"].length; i++) {\n        var type = \"fa fa-circle text-\" + json[\"types\"][i];\n        legend.push(React.createElement(\"i\", {\n          className: type,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }));\n        legend.push(\" \");\n        legend.push(json[\"names\"][i]);\n      }\n\n      return legend;\n    }\n  }]);\n\n  function eventStatistics(props) {\n    var _this;\n\n    _classCallCheck(this, eventStatistics);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(eventStatistics).call(this, props));\n    _this.state = {\n      hashedIDEvent: _this.props.history.location.state.hashedIDEvent,\n      numberOfUsers: 0,\n      numberOfParticipants: 0,\n      numberOfFullyCompleted: 0,\n      numberOfSteps: 0,\n      numberOfScanners: 0,\n      stepTitles: [],\n      stepsCompletion: []\n    };\n    _this.getData = _this.getData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(eventStatistics, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getData(this.state.hashedIDEvent);\n      this.interval = setInterval(function () {\n        return _this2.getData(_this2.state.hashedIDEvent);\n      }, 3000);\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(hashedIDEvent) {\n      var _this3 = this;\n\n      console.log(\"Getting data..\");\n      var data = [];\n      return getEventStatisticsDataAPICALL(hashedIDEvent).then(function (res) {\n        data = res.data.data;\n\n        _this3.setState({\n          numberOfUsers: data.numberOfUsers,\n          numberOfParticipants: data.numberOfParticipants,\n          numberOfFullyCompleted: data.numberOfFullyCompleted,\n          numberOfScanners: data.numberOfScanners,\n          numberOfSteps: data.numberOfSteps,\n          stepTitles: data.stepTitles,\n          stepsCompletion: data.stepsCompletion\n        }); // Pie Data Scanners vs Users\n\n\n        dataPieAccountScannersRatio.series = [data.numberOfScanners, data.numberOfUsers - data.numberOfScanners];\n        dataPieAccountScannersRatio.labels = [parseInt(data.numberOfScanners * 100 / data.numberOfUsers).toString() + \"%\", parseInt((data.numberOfUsers - data.numberOfScanners) * 100 / data.numberOfUsers).toString() + \"%\"]; // Pie Data Participants vs Fully Complted\n\n        dataPieAccountFullyCompletedRatio.series = [data.numberOfFullyCompleted, data.numberOfParticipants - data.numberOfFullyCompleted];\n        dataPieAccountFullyCompletedRatio.labels = [parseInt(data.numberOfFullyCompleted * 100 / data.numberOfParticipants).toString() + \"%\", parseInt((data.numberOfParticipants - data.numberOfFullyCompleted) * 100 / data.numberOfParticipants).toString() + \"%\"]; // Pie Data Participants vs users\n\n        dataPieAccountParticipantsRatio.series = [data.numberOfParticipants, data.numberOfUsers - data.numberOfParticipants];\n        dataPieAccountParticipantsRatio.labels = [parseInt(data.numberOfParticipants * 100 / data.numberOfUsers).toString() + \"%\", parseInt((data.numberOfUsers - data.numberOfParticipants) * 100 / data.numberOfUsers).toString() + \"%\"]; // //            Curve Data\n\n        dataStepCompletionTraffic.series[0] = data.stepCompletionWeeklyTraffic;\n        optionsStepCompletionTraffic.high = Math.max(data.stepCompletionWeeklyTraffic + 50); //\n        // //            Bar Data\n        //             dataBarEventsStepsTraffic.series[0] = data.eventStepTraffic.events;\n        //             dataBarEventsStepsTraffic.series[1] = data.eventStepTraffic.steps;\n\n        _this3.forceUpdate();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(StatsCard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \" text-warning\",\n          class: \"fa fa-qrcode\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }),\n        statsText: \"Scanners\",\n        statsValue: this.state.numberOfScanners,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-refresh\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }),\n        statsIconText: \"Updated now\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(StatsCard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"fas fa-shoe-prints\",\n          style: {\n            color: 'blue'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }),\n        statsText: \"Steps\",\n        statsValue: this.state.numberOfSteps,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-calendar-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }),\n        statsIconText: \"Last day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(StatsCard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"fa fa-check\",\n          style: {\n            color: 'green'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }),\n        statsText: \"Fully Completed\",\n        statsValue: this.state.numberOfFullyCompleted,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-clock-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }),\n        statsIconText: \"In the last 12 hours\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(StatsCard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"fas fa-users text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }),\n        statsText: \"Participants\",\n        statsValue: this.state.numberOfParticipants,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-refresh\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }),\n        statsIconText: \"Updated now\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Scanner's Ratio\",\n        category: \"Scanners vs Users\",\n        stats: \"Updated just now\",\n        statsIcon: \"fa fa-history\",\n        content: React.createElement(\"div\", {\n          id: \"chartPreferences\",\n          className: \"ct-chart ct-perfect-fourth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(ChartistGraph, {\n          data: dataPieAccountScannersRatio,\n          type: \"Pie\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        })),\n        legend: React.createElement(\"div\", {\n          className: \"legend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, this.createLegend(legendPieAccountScannersRatio)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Fully Completed Ratio\",\n        category: \"Participants vs Fully Completed\",\n        stats: \"Updated just now\",\n        statsIcon: \"fa fa-history\",\n        content: React.createElement(\"div\", {\n          id: \"chartPreferences\",\n          className: \"ct-chart ct-perfect-fourth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(ChartistGraph, {\n          data: dataPieAccountFullyCompletedRatio,\n          type: \"Pie\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        })),\n        legend: React.createElement(\"div\", {\n          className: \"legend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, this.createLegend(legendPieAccountFullyCompletedRatio)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Participants Ratio\",\n        category: \"Participants vs Users\",\n        stats: \"Updated just now\",\n        statsIcon: \"fa fa-history\",\n        content: React.createElement(\"div\", {\n          id: \"chartPreferences\",\n          className: \"ct-chart ct-perfect-fourth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, React.createElement(ChartistGraph, {\n          data: dataPieAccountParticipantsRatio,\n          type: \"Pie\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        })),\n        legend: React.createElement(\"div\", {\n          className: \"legend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }, this.createLegend(legendPieAccountParticipantsRatio)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        style: {\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        icon: {\n          name: \"arrow-right\",\n          size: 15,\n          color: \"white\"\n        },\n        style: {\n          marginRight: 200,\n          height: 100,\n          justifyContent: 'center',\n          alignSelf: 'center',\n          fontWeight: \"bold\"\n        },\n        className: \"btn btn-success\",\n        onClick: function onClick() {\n          _this4.getData(_this4.state.hashedIDEvent);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Refresh\"), React.createElement(Col, {\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(Card, {\n        statsIcon: \"fa fa-history\",\n        id: \"chartHours\",\n        title: \"Step Completion\",\n        category: \"\",\n        stats: \"Updated every 3 seconds\",\n        content: React.createElement(\"div\", {\n          className: \"ct-chart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, React.createElement(ChartistGraph, {\n          style: {},\n          options: {\n            onlyInteger: true,\n            axisY: {\n              labelInterpolationFnc: function labelInterpolationFnc(value) {\n                return value;\n              }\n            }\n          },\n          data: {\n            labels: this.state.stepTitles,\n            series: [this.state.stepsCompletion]\n          },\n          type: \"Bar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        })),\n        legend: React.createElement(\"div\", {\n          className: \"legend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }, this.createLegend(legendStepCompletionTraffic)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        style: {\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(Card, {\n        statsIcon: \"fa fa-history\",\n        id: \"chartHours\",\n        title: \"Step Completion Traffic\",\n        category: \"7 Days Traffic\",\n        stats: \"Updated just now\",\n        content: React.createElement(\"div\", {\n          className: \"ct-chart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, React.createElement(ChartistGraph, {\n          data: dataStepCompletionTraffic,\n          type: \"Line\",\n          options: optionsStepCompletionTraffic,\n          responsiveOptions: responsiveStepCompletionTraffic,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        })),\n        legend: React.createElement(\"div\", {\n          className: \"legend\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, this.createLegend(legendStepCompletionTraffic)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return eventStatistics;\n}(Component);\n\nexport default withRouter(eventStatistics);","map":{"version":3,"sources":["/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/src/dashboard/Event/eventStatistics.js"],"names":["React","Component","ChartistGraph","Container","Row","Col","getEventStatisticsDataAPICALL","withRouter","Card","StatsCard","dataPieAccountScannersRatio","labels","series","legendPieAccountScannersRatio","names","types","dataPieAccountFullyCompletedRatio","legendPieAccountFullyCompletedRatio","dataPieAccountParticipantsRatio","legendPieAccountParticipantsRatio","dataStepCompletionTraffic","optionsStepCompletionTraffic","low","high","showArea","height","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","right","responsiveStepCompletionTraffic","labelInterpolationFnc","value","legendStepCompletionTraffic","eventStatistics","json","legend","i","length","type","push","props","state","hashedIDEvent","history","location","numberOfUsers","numberOfParticipants","numberOfFullyCompleted","numberOfSteps","numberOfScanners","stepTitles","stepsCompletion","getData","bind","interval","setInterval","console","log","data","then","res","setState","parseInt","toString","stepCompletionWeeklyTraffic","Math","max","forceUpdate","color","createLegend","justifyContent","name","size","marginRight","alignSelf","fontWeight","onlyInteger","axisY"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport {getEventStatisticsDataAPICALL} from '../../utils/requests';\n\nimport {withRouter} from 'react-router-dom';\n\nimport { Card } from \"../../components/Card/Card.jsx\";\nimport { StatsCard } from \"../../components/StatsCard/StatsCard.jsx\";\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nlet dataPieAccountScannersRatio = {\n    labels: [],\n    series: []\n};\nlet legendPieAccountScannersRatio = {\n    names: [\"Scanners\", \"Users\"],\n    types: [\"info\", \"danger\"]\n};\n\nlet dataPieAccountFullyCompletedRatio = {\n    labels: [],\n    series: []\n};\nlet legendPieAccountFullyCompletedRatio = {\n    names: [\"Participants\", \"Fully Completed\"],\n    types: [\"info\", \"danger\"]\n};\n\nlet dataPieAccountParticipantsRatio = {\n    labels: [],\n    series: []\n};\nlet legendPieAccountParticipantsRatio = {\n    names: [\"Participants\", \"Users\"],\n    types: [\"info\", \"danger\"]\n};\n\nvar dataStepCompletionTraffic = {\n  labels: [\n    \"Mon\",\n    \"Tue\",\n    \"Wed\",\n    \"Thu\",\n    \"Fri\",\n    \"Sat\",\n    \"Sun\"\n  ],\n  series: [\n    [],\n  ]\n};\nvar optionsStepCompletionTraffic = {\n  low: 0,\n  high: 1000,\n  showArea: false,\n  height: \"245px\",\n  axisX: {\n    showGrid: false\n  },\n  lineSmooth: true,\n  showLine: true,\n  showPoint: true,\n  fullWidth: true,\n  chartPadding: {\n    right: 50\n  }\n};\nvar responsiveStepCompletionTraffic = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendStepCompletionTraffic = {\n  names: [\"Completions \"],\n  types: [\"info\"]\n};\n\nclass eventStatistics extends Component {\n  createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n    constructor(props){\n        super(props);\n        this.state = {\n            hashedIDEvent: this.props.history.location.state.hashedIDEvent,\n            numberOfUsers : 0,\n            numberOfParticipants: 0,\n            numberOfFullyCompleted: 0,\n            numberOfSteps: 0,\n            numberOfScanners: 0,\n            stepTitles: [],\n            stepsCompletion: []\n\n        }\n\n        this.getData = this.getData.bind(this);\n\n    }\n\n    componentDidMount(){\n\n        this.getData(this.state.hashedIDEvent);\n        this.interval = setInterval(() => this.getData(this.state.hashedIDEvent), 3000);\n    }\n    \n    getData(hashedIDEvent){\n         console.log(\"Getting data..\");\n        let data = [];\n        return getEventStatisticsDataAPICALL(hashedIDEvent)\n        .then((res) => {\n           data = res.data.data;\n\n             this.setState({\n                 numberOfUsers: data.numberOfUsers,\n                 numberOfParticipants: data.numberOfParticipants,\n                 numberOfFullyCompleted: data.numberOfFullyCompleted,\n                 numberOfScanners: data.numberOfScanners,\n                 numberOfSteps: data.numberOfSteps,\n                 stepTitles: data.stepTitles,\n                 stepsCompletion: data.stepsCompletion\n             });\n\n             // Pie Data Scanners vs Users\n            dataPieAccountScannersRatio.series = [data.numberOfScanners, data.numberOfUsers-data.numberOfScanners] ;\n            dataPieAccountScannersRatio.labels = [(parseInt((data.numberOfScanners*100)/data.numberOfUsers)).toString()+\"%\", (parseInt((data.numberOfUsers-data.numberOfScanners)*100/data.numberOfUsers)).toString()+\"%\"];\n\n            // Pie Data Participants vs Fully Complted\n            dataPieAccountFullyCompletedRatio.series = [data.numberOfFullyCompleted, data.numberOfParticipants-data.numberOfFullyCompleted] ;\n            dataPieAccountFullyCompletedRatio.labels = [(parseInt((data.numberOfFullyCompleted*100)/data.numberOfParticipants)).toString()+\"%\", (parseInt((data.numberOfParticipants-data.numberOfFullyCompleted)*100/data.numberOfParticipants)).toString()+\"%\"];\n\n            // Pie Data Participants vs users\n            dataPieAccountParticipantsRatio.series = [data.numberOfParticipants, data.numberOfUsers-data.numberOfParticipants] ;\n            dataPieAccountParticipantsRatio.labels = [(parseInt((data.numberOfParticipants*100)/data.numberOfUsers)).toString()+\"%\", (parseInt((data.numberOfUsers-data.numberOfParticipants)*100/data.numberOfUsers)).toString()+\"%\"];\n\n// //            Curve Data\n            dataStepCompletionTraffic.series[0] = data.stepCompletionWeeklyTraffic;\n            optionsStepCompletionTraffic.high =  Math.max(data.stepCompletionWeeklyTraffic + 50);\n//\n// //            Bar Data\n//             dataBarEventsStepsTraffic.series[0] = data.eventStepTraffic.events;\n//             dataBarEventsStepsTraffic.series[1] = data.eventStepTraffic.steps;\n            \n            this.forceUpdate();\n         });\n    }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Container fluid>\n          <Row>\n            <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\" text-warning\" class=\"fa fa-qrcode\" />}\n                statsText=\"Scanners\"\n                statsValue={this.state.numberOfScanners}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText=\"Updated now\"\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"fas fa-shoe-prints\" style={{color:'blue'}}/>}\n                statsText=\"Steps\"\n                statsValue={this.state.numberOfSteps}\n                statsIcon={<i className=\"fa fa-calendar-o\" />}\n                statsIconText=\"Last day\"\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"fa fa-check\" style={{color:'green'}}/>}\n                statsText=\"Fully Completed\"\n                statsValue={this.state.numberOfFullyCompleted}\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText=\"In the last 12 hours\"\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"fas fa-users text-info\" />}\n                statsText=\"Participants\"\n                statsValue={this.state.numberOfParticipants}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText=\"Updated now\"\n              />\n            </Col>\n          </Row>\n            <Row>\n                <Col md={4}>\n                    <Card\n                        title=\"Scanner's Ratio\"\n                        category=\"Scanners vs Users\"\n                        stats=\"Updated just now\"\n                        statsIcon=\"fa fa-history\"\n                        content={\n                            <div\n                                id=\"chartPreferences\"\n                                className=\"ct-chart ct-perfect-fourth\"\n                            >\n                                <ChartistGraph data={dataPieAccountScannersRatio} type=\"Pie\" />\n                            </div>\n                        }\n                        legend={\n                            <div className=\"legend\">{this.createLegend(legendPieAccountScannersRatio)}</div>\n                        }\n                    />\n                </Col>\n                <Col md={4}>\n                    <Card\n                        title=\"Fully Completed Ratio\"\n                        category=\"Participants vs Fully Completed\"\n                        stats=\"Updated just now\"\n                        statsIcon=\"fa fa-history\"\n                        content={\n                            <div\n                                id=\"chartPreferences\"\n                                className=\"ct-chart ct-perfect-fourth\"\n                            >\n                                <ChartistGraph data={dataPieAccountFullyCompletedRatio} type=\"Pie\" />\n                            </div>\n                        }\n                        legend={\n                            <div className=\"legend\">{this.createLegend(legendPieAccountFullyCompletedRatio)}</div>\n                        }\n                    />\n                </Col>\n\n                <Col md={4}>\n                    <Card\n                        title=\"Participants Ratio\"\n                        category=\"Participants vs Users\"\n                        stats=\"Updated just now\"\n                        statsIcon=\"fa fa-history\"\n                        content={\n                            <div\n                                id=\"chartPreferences\"\n                                className=\"ct-chart ct-perfect-fourth\"\n                            >\n                                <ChartistGraph data={dataPieAccountParticipantsRatio} type=\"Pie\" />\n                            </div>\n                        }\n                        legend={\n                            <div className=\"legend\">{this.createLegend(legendPieAccountParticipantsRatio)}</div>\n                        }\n                    />\n                </Col>\n            </Row>\n            <Row style={{justifyContent: 'center'}}>\n\n                <button icon={{\n                    name: \"arrow-right\",\n                    size: 15,\n                    color: \"white\"\n                }} style={{marginRight: 200, height: 100, justifyContent: 'center', alignSelf:'center', fontWeight: \"bold\"}} className='btn btn-success' onClick={()=>{\n                    this.getData(this.state.hashedIDEvent);\n                }}>Refresh</button>\n                <Col md={8}>\n                    <Card\n                        statsIcon=\"fa fa-history\"\n                        id=\"chartHours\"\n                        title=\"Step Completion\"\n                        category=\"\"\n                        stats=\"Updated every 3 seconds\"\n                        content={\n                            <div className=\"ct-chart\">\n                                <ChartistGraph\n                                    style={{}}\n                                    options={{\n                                    onlyInteger: true,\n                                    axisY: {\n                                        labelInterpolationFnc: function (value) {\n                                            return value;\n                                        }\n                                    }\n                                }} data={{labels: this.state.stepTitles, series: [this.state.stepsCompletion]}} type={\"Bar\"} />\n                            </div>\n\n                        }\n                        legend={\n                            <div className=\"legend\" >{this.createLegend(legendStepCompletionTraffic)}</div>\n                        }\n                    />\n                </Col>\n            </Row>\n            <Row style={{justifyContent: 'center'}}>\n                <Col md={8}>\n                    <Card\n                        statsIcon=\"fa fa-history\"\n                        id=\"chartHours\"\n                        title=\"Step Completion Traffic\"\n                        category=\"7 Days Traffic\"\n                        stats=\"Updated just now\"\n                        content={\n                            <div className=\"ct-chart\">\n                                <ChartistGraph\n                                    data={dataStepCompletionTraffic}\n                                    type=\"Line\"\n                                    options={optionsStepCompletionTraffic}\n                                    responsiveOptions={responsiveStepCompletionTraffic}\n                                />\n                            </div>\n                        }\n                        legend={\n                            <div className=\"legend\" >{this.createLegend(legendStepCompletionTraffic)}</div>\n                        }\n\n                    />\n                </Col>\n            </Row>\n          {/*<Row>*/}\n            {/*<Col md={8}>*/}\n              {/*<Card*/}\n                {/*statsIcon=\"fa fa-history\"*/}\n                {/*id=\"chartHours\"*/}\n                {/*title=\"Users Traffic\"*/}\n                {/*category=\"7 Days Traffic\"*/}\n                {/*stats=\"Updated just now\"*/}\n                {/*content={*/}\n                  {/*<div className=\"ct-chart\">*/}\n                    {/*<ChartistGraph*/}\n                      {/*data={dataTraffic}*/}\n                      {/*type=\"Line\"*/}\n                      {/*options={optionsTraffic}*/}\n                      {/*responsiveOptions={responsiveTraffic}*/}\n                    {/*/>*/}\n                  {/*</div>*/}\n                {/*}*/}\n                {/*legend={*/}\n                  {/*<div className=\"legend\" >{this.createLegend(legendTraffic)}</div>*/}\n                {/*}*/}\n              {/*/>*/}\n            {/*</Col>*/}\n            {/*<Col md={4}>*/}\n              {/*<Card*/}\n                {/*title=\"Accounts Statistics\"*/}\n                {/*category=\"Activated Accounts vs Non-Activated Accounts\"*/}\n                {/*stats=\"Updated just now\"*/}\n                {/*statsIcon=\"fa fa-history\"*/}\n                {/*content={*/}\n                  {/*<div*/}\n                    {/*id=\"chartPreferences\"*/}\n                    {/*className=\"ct-chart ct-perfect-fourth\"*/}\n                  {/*>*/}\n                    {/*<ChartistGraph data={dataPieAcountActivationRatio} type=\"Pie\" />*/}\n                  {/*</div>*/}\n                {/*}*/}\n                {/*legend={*/}\n                  {/*<div className=\"legend\">{this.createLegend(legendPieAcountActivationRatio)}</div>*/}\n                {/*}*/}\n              {/*/>*/}\n            {/*</Col>*/}\n          {/*</Row>*/}\n\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(eventStatistics);\n"]},"metadata":{},"sourceType":"module"}