{"ast":null,"code":"import axios from 'axios';\nimport { getFromStorage } from './storage';\nimport GLOBAL from './global'; // const domain = 'http://fye-em.aui.ma/';\n\nvar domain = 'http://fye-em.aui.ma/';\nvar admin = 'http://localhost:8080/admin/';\nvar users = 'http://localhost:8080/users/';\nvar requests = {\n  \"GET_USERS_DATA\": domain + \":hashedID/users\",\n  \"GET_ADMINS_DATA\": domain + \":hashedID/admins\",\n  \"GET_EVENTS_DATA\": domain + \":hashedID/events\",\n  \"GET_STEPS_DATA\": domain + \":hashedID/steps\",\n  \"POST_SIGNOUT\": domain + \"signout\",\n  \"GET_STATISTICS_DATA\": domain + \":hashedID/statistics\",\n  \"GET_EVENT_STATISTICS_DATA\": domain + \":hashedID/events/:eventHashedID/event-statistics\",\n  \"GET_STEP_STATISTICS_DATA\": domain + \":hashedID/events/:eventHashedID/steps/:stepHashedID/step-statistics\",\n  \"POST_CREATE_EVENT\": domain + \"events/:hashedID/events/create\",\n  \"POST_CREATE_STEP\": domain + \"steps/:hashedID/events/:eventHashedID/steps/create\",\n  \"POST_SET_LOCATION_STEP\": domain + \"steps/:hashedID/events/:eventHashedID/steps/:stepHashedID/addLocation\",\n  \"POST_SET_LOCATION_EVENT\": domain + \"events/:hashedID/events/:eventHashedID/add-location\",\n  \"POST_SET_TIME_EVENT\": domain + \"events/:hashedID/events/:eventHashedID/add-date-time\",\n  \"GET_EVENT_STEPS_LIST\": domain + \"steps/:hashedID/events/:eventHashedID/steps/data\",\n  \"GET_EVENT_FULL_DATA\": domain + \"events/:hashedID/event/:eventHashedID/full-data\",\n  \"GET_USER_FULL_DATA\": domain + \"accounts/:hashedID/user/data\",\n  \"GET_STEP_FULL_DATA\": domain + \"steps/:hashedID/event/:eventHashedID/step/:stepHashedID/full-data\",\n  \"POST_UPDATE_USER\": domain + \"accounts/:hashedID/users/:userHashedID/update\",\n  \"POST_UPDATE_EVENT\": domain + \"events/:hashedID/events/:eventHashedID/update\",\n  \"POST_UPDATE_STEP\": domain + \"steps/:hashedID/events/:eventHashedID/steps/:stepHashedID/update\",\n  \"POST_DELETE_EVENT\": domain + \"events/:hashedID/events/:eventHashedID/delete\",\n  \"POST_DELETE_USER\": domain + \"accounts/:hashedID/users/:userHashedID/delete\",\n  \"POST_DELETE_STEP\": domain + \"steps/:hashedID/events/:eventHashedID/steps/:stepHashedID/delete\",\n  \"GET_USERS_PARTICIPANTS_DATA\": domain + \"accounts/:hashedID/users/data\",\n  \"POST_REMOVE_USER_FROM_PARTICIPANTS\": domain + \"events/:hashedID/event/:eventHashedID/remove/participant\",\n  \"POST_REMOVE_USER_FROM_FULLY_COMPLETED\": domain + \"events/:hashedID/event/:eventHashedID/remove/fully-completed\",\n  \"POST_REMOVE_USER_FROM_COMPLETION_OF_STEP\": domain + \"steps/:hashedID/event/:eventHashedID/step/:stepHashedID/remove/completed\",\n  \"POST_REMOVE_USER_FROM_SCANNER_OF_STEP\": domain + \"steps/:hashedID/events/:eventHashedID/steps/:stepHashedID/privilege/scanner/remove\",\n  \"POST_ADD_USER_TO_PARTICIPANTS\": domain + \"events/admin/:hashedID/event/:eventHashedID/join\",\n  \"POST_ADD_USER_TO_COMPLETION_OF_STEP\": domain + \"steps/:hashedID/events/:eventHashedID/steps/:stepHashedID/user/aui/:auiID/complete\",\n  \"POST_ADD_USER_TO_SCANNER_OF_STEP\": domain + \"steps/:hashedID/events/:eventHashedID/steps/:stepHashedID/privilege/scanner/:hashedIDScanner\",\n  \"POST_ADD_USER_TO_FULLY_COMPLETED\": domain + \"events/admin/:hashedID/event/:eventHashedID/leave\"\n};\n\nfunction verify(token) {\n  return axios.get(users + 'verify', {\n    params: {\n      token: token\n    }\n  });\n}\n\nfunction postStepLocationUpdateAPICALL(eventID, stepID, lat, long, commonLocation) {\n  var URL_READY = requests[\"POST_SET_LOCATION_STEP\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", eventID);\n  URL_READY = URL_READY.replace(\":stepHashedID\", stepID);\n  return axios.post(URL_READY, {\n    latitude: lat,\n    longitude: long,\n    commonLocation: commonLocation\n  }, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    console.log(res);\n    return true;\n  }).catch(function (err) {\n    console.error(err);\n    return false;\n  });\n}\n\nfunction postEventLocationUpdateAPICALL(eventID, lat, long, commonLocation) {\n  var URL_READY = requests[\"POST_SET_LOCATION_EVENT\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", eventID);\n  return axios.post(URL_READY, {\n    latitude: lat,\n    longitude: long,\n    commonLocation: commonLocation\n  }, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    console.log(res);\n    return true;\n  }).catch(function (err) {\n    console.error(err);\n    return false;\n  });\n}\n\nfunction postEventDateTimeUpdateAPICALL(eventID, start, end) {\n  console.log(\"eventID:\");\n  console.log(eventID);\n  var URL_READY = requests[\"POST_SET_TIME_EVENT\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", eventID);\n  console.log(URL_READY);\n  console.log(start);\n  console.log(end);\n  return axios.post(URL_READY, {\n    startDate: start,\n    endDate: end\n  }, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    console.log(res);\n    return true;\n  }).catch(function (err) {\n    console.error(err);\n    return false;\n  });\n}\n\nfunction getStatisticsDataAPICALL() {\n  var URL_READY = requests[\"GET_STATISTICS_DATA\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  return axios.get(URL_READY, {\n    headers: {\n      auth: GLOBAL.AUTH\n    },\n    params: {}\n  });\n}\n\nfunction getEventStatisticsDataAPICALL(eventID) {\n  var URL_READY = requests[\"GET_EVENT_STATISTICS_DATA\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", eventID);\n  console.log(URL_READY);\n  return axios.get(URL_READY, {\n    headers: {\n      auth: GLOBAL.AUTH\n    },\n    params: {}\n  });\n}\n\nfunction getStepStatisticsDataAPICALL(eventID, stepID) {\n  var URL_READY = requests[\"GET_STEP_STATISTICS_DATA\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", eventID);\n  URL_READY = URL_READY.replace(\":stepHashedID\", stepID);\n  console.log(URL_READY);\n  return axios.get(URL_READY, {\n    headers: {\n      auth: GLOBAL.AUTH\n    },\n    params: {}\n  });\n}\n\nfunction postStepCreationAPICALL(eventID, stepTitle, stepDescription) {\n  var URL_READY = requests[\"POST_CREATE_STEP\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", eventID);\n  console.log(URL_READY);\n  console.log(eventID);\n  console.log(stepTitle);\n  console.log(stepDescription);\n  return axios.post(URL_READY, {\n    stepTitle: stepTitle,\n    stepDescription: stepDescription\n  }, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    return {\n      eventID: res.data.data.hashedIDEvent,\n      stepID: res.data.data.hashedIDStep\n    };\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction getUserFullData(hashedIDUser) {\n  var URL_READY = requests[\"GET_USER_FULL_DATA\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  console.log(URL_READY);\n  return axios.post(URL_READY, {\n    IDs: hashedIDUser\n  }, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    return res;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction getEventFullData(eventID) {\n  var URL_READY = requests[\"GET_EVENT_FULL_DATA\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", eventID);\n  console.log(URL_READY);\n  return axios.get(URL_READY, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    return res;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction getStepFullData(eventID, stepID) {\n  var URL_READY = requests[\"GET_STEP_FULL_DATA\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", eventID);\n  URL_READY = URL_READY.replace(\":stepHashedID\", stepID);\n  console.log(URL_READY);\n  return axios.get(URL_READY, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    return res;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction getParticipantsDataAPICall(usersIDs) {\n  var URL_READY = requests[\"GET_USERS_PARTICIPANTS_DATA\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  console.log(URL_READY);\n  console.log(\"usersIDs\");\n  console.log(usersIDs);\n  var dataJSON = JSON.parse(JSON.stringify(usersIDs));\n  return axios.post(URL_READY, {\n    IDs: dataJSON\n  }, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    console.log(res.data);\n    return res.data;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction postEventCreationAPICALL(eventTitle, eventDescription, maxParticipants, isOrdered, organizer) {\n  var URL_READY = requests[\"POST_CREATE_EVENT\"].replace(\":hashedID\", GLOBAL.HASHEDID); // console.log(URL_READY);\n  // console.log(\"adminID:\"+ GLOBAL.HASHEDID + \",\" +\n  //     \"eventTitle:\" + eventTitle + \",\" +\n  //     \"eventDescription:\" + eventDescription + \",\" +\n  //     \"maxParticipants:\" + maxParticipants + \",\" +\n  //     \"isOrdered:\" + isOrdered + \",\" +\n  //     \"organizer:\" +  organizer)\n\n  return axios.post(URL_READY, {\n    adminID: GLOBAL.HASHEDID,\n    eventTitle: eventTitle,\n    eventDescription: eventDescription,\n    maxParticipants: maxParticipants,\n    isOrdered: isOrdered,\n    organizer: organizer\n  }, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    console.log(res);\n    GLOBAL.EVENTTITLE = res.data.data.eventTitleCreated;\n    return res.data.data.hashedIDEventCreated;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction postUserUpdateAPICALL(userHashedID, firstName, lastName, email, phoneNumber, gender) {\n  var URL_READY = requests[\"POST_UPDATE_USER\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":userHashedID\", userHashedID);\n  console.log(URL_READY);\n  console.log(\"firstName:\" + firstName + \"lastName:\" + lastName + \"email:\" + email + \"phoneNumber:\" + phoneNumber + \"gender:\" + gender);\n  return axios.post(URL_READY, {\n    firstName: firstName,\n    lastName: lastName,\n    email: email,\n    phoneNumber: phoneNumber,\n    gender: gender\n  }, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    console.log(\"RESULT HERE:\");\n    console.log(res);\n    return res.data.status === \"success\" ? true : false;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction postEventUpdateAPICALL(eventHashedID, adminAUIID, eventTitle, eventDescription, maxParticipants, organizer) {\n  var URL_READY = requests[\"POST_UPDATE_EVENT\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", eventHashedID);\n  console.log(URL_READY);\n  return axios.post(URL_READY, {\n    adminAUIID: adminAUIID,\n    eventTitle: eventTitle,\n    eventDescription: eventDescription,\n    maxParticipants: maxParticipants,\n    organizer: organizer\n  }, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    console.log(\"RESULT HERE:\");\n    console.log(res);\n    GLOBAL.EVENTTITLE = res.data.data.eventTitleUpdated;\n    return res.data.data.hashedIDEventUpdated;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction postStepUpdateAPICALL(eventHashedID, stepHashedID, stepTitle, stepDescription) {\n  var URL_READY = requests[\"POST_UPDATE_STEP\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", eventHashedID);\n  URL_READY = URL_READY.replace(\":stepHashedID\", stepHashedID);\n  console.log(URL_READY);\n  return axios.post(URL_READY, {\n    stepTitle: stepTitle,\n    stepDescription: stepDescription\n  }, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    console.log(\"RESULT HERE:\");\n    console.log(res);\n    return res.data.data.hashedIDStepUpdated;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction postRemoveUserFromParticipantsAPICALL(hashedIDEvent, hashedID) {\n  var URL_READY = requests[\"POST_REMOVE_USER_FROM_PARTICIPANTS\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", hashedIDEvent);\n  console.log(URL_READY);\n  return axios.post(URL_READY, {\n    hashedID: hashedID\n  }, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    console.log(res.data.status);\n    return res.data.status === \"success\" ? true : false;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction postRemoveUserFromCompletionOfStepAPICALL(hashedIDEvent, hashedIDStep, hashedID) {\n  var URL_READY = requests[\"POST_REMOVE_USER_FROM_COMPLETION_OF_STEP\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", hashedIDEvent);\n  URL_READY = URL_READY.replace(\":stepHashedID\", hashedIDStep);\n  console.log(URL_READY);\n  return axios.post(URL_READY, {\n    hashedID: hashedID\n  }, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    console.log(res.data.status);\n    return res.data.status === \"success\" ? true : false;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction postRemoveUserFromScannerOfStepAPICALL(hashedIDEvent, hashedIDStep, hashedID) {\n  var URL_READY = requests[\"POST_REMOVE_USER_FROM_SCANNER_OF_STEP\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", hashedIDEvent);\n  URL_READY = URL_READY.replace(\":stepHashedID\", hashedIDStep);\n  console.log(URL_READY);\n  return axios.post(URL_READY, {\n    hashedID: hashedID\n  }, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    console.log(res.data.status);\n    return res.data.status === \"success\" ? true : false;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction postRemoveUserFromFullyCompletedAPICALL(hashedIDEvent, hashedID) {\n  var URL_READY = requests[\"POST_REMOVE_USER_FROM_FULLY_COMPLETED\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", hashedIDEvent);\n  console.log(URL_READY);\n  return axios.post(URL_READY, {\n    hashedID: hashedID\n  }, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    console.log(res.data.status);\n    return res.data.status === \"success\" ? true : false;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction postAddUserToParticipantsOfEventAPICALL(hashedIDEvent, auiID) {\n  var URL_READY = requests[\"POST_ADD_USER_TO_PARTICIPANTS\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", hashedIDEvent);\n  console.log(\"auiID: \" + auiID);\n  console.log(URL_READY);\n  return axios.post(URL_READY, {\n    auiID: auiID\n  }, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    console.log(res.data.status);\n    return res;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction postAddUserToCompletionOfStepAPICALL(hashedIDEvent, hashedIDStep, auiID) {\n  var URL_READY = requests[\"POST_ADD_USER_TO_COMPLETION_OF_STEP\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", hashedIDEvent);\n  URL_READY = URL_READY.replace(\":stepHashedID\", hashedIDStep);\n  URL_READY = URL_READY.replace(\":auiID\", auiID);\n  console.log(\"auiID: \" + auiID);\n  console.log(URL_READY);\n  return axios.get(URL_READY, {\n    headers: {\n      auth: GLOBAL.AUTH\n    },\n    params: {}\n  }).then(function (res) {\n    console.log(res.data.status);\n    return res;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction postAddUserToScannerOfStepAPICALL(hashedIDEvent, hashedIDStep, auiID) {\n  var URL_READY = requests[\"POST_ADD_USER_TO_SCANNER_OF_STEP\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", hashedIDEvent);\n  URL_READY = URL_READY.replace(\":stepHashedID\", hashedIDStep);\n  URL_READY = URL_READY.replace(\":hashedIDScanner\", auiID);\n  console.log(\"auiID: \" + auiID);\n  console.log(URL_READY);\n  return axios.get(URL_READY, {\n    headers: {\n      auth: GLOBAL.AUTH\n    },\n    params: {}\n  }).then(function (res) {\n    console.log(res.data.status);\n    return res;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction postAddUserToFullyCompletedOfEventAPICALL(hashedIDEvent, auiID) {\n  var URL_READY = requests[\"POST_ADD_USER_TO_FULLY_COMPLETED\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", hashedIDEvent);\n  console.log(\"auiID: \" + auiID);\n  console.log(URL_READY);\n  return axios.post(URL_READY, {\n    auiID: auiID\n  }, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    console.log(res.data.status);\n    return res;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction postDeleteEventAPICALL(eventID) {\n  var URL_READY = requests[\"POST_DELETE_EVENT\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", eventID);\n  console.log(URL_READY);\n  return axios.post(URL_READY, {}, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    console.log(res);\n    return res.data.status === \"success\" ? true : false;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction postDeleteUserAPICALL(auiID) {\n  var URL_READY = requests[\"POST_DELETE_USER\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":userHashedID\", auiID);\n  console.log(URL_READY);\n  return axios.post(URL_READY, {}, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    console.log(res);\n    return res.data.status === \"success\" ? true : false;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction postDeleteStepAPICALL(eventID, stepID) {\n  var URL_READY = requests[\"POST_DELETE_STEP\"].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", eventID);\n  URL_READY = URL_READY.replace(\":stepHashedID\", stepID);\n  console.log(URL_READY);\n  return axios.post(URL_READY, {}, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  }).then(function (res) {\n    console.log(res);\n    return res.data.status === \"success\" ? true : false;\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction getTableData(object, find) {\n  var URL_READY = requests[object].replace(\":hashedID\", GLOBAL.HASHEDID);\n  console.log(URL_READY);\n  return axios.get(URL_READY, {\n    headers: {\n      auth: GLOBAL.AUTH\n    },\n    params: {}\n  });\n}\n\nfunction getStepsListData(object, eventHashedID) {\n  var URL_READY = requests[object].replace(\":hashedID\", GLOBAL.HASHEDID);\n  URL_READY = URL_READY.replace(\":eventHashedID\", eventHashedID);\n  return axios.get(URL_READY, {\n    headers: {\n      auth: GLOBAL.AUTH\n    },\n    params: {}\n  });\n}\n\nfunction postTableData(object, values) {\n  return axios.post(admin + 'table', {\n    test: 'test',\n    object: object,\n    data: values\n  }, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  });\n}\n\nfunction updateTableData(object, attribute, value, values) {\n  return axios.put(admin + 'table', {\n    object: object,\n    attribute: attribute,\n    value: value,\n    data: values\n  }, {\n    headers: {\n      token: getFromStorage(\"token\")\n    }\n  });\n}\n\nfunction deleteTableData(body) {\n  console.log('calling delete');\n  return axios.delete(admin + 'table', Object.assign(body, {\n    headers: {\n      token: getFromStorage(\"token\")\n    }\n  }));\n}\n\nfunction getUser() {\n  return axios.get(users + 'current', {\n    params: {\n      token: getFromStorage(\"token\")\n    }\n  });\n}\n\nfunction logout() {\n  return axios.post(requests.POST_SIGNOUT, {}, {\n    headers: {\n      auth: GLOBAL.AUTH\n    }\n  });\n}\n\nexport { verify, getTableData, postTableData, getStepsListData, updateTableData, deleteTableData, getUser, getEventStatisticsDataAPICALL, getStatisticsDataAPICALL, postEventCreationAPICALL, postStepCreationAPICALL, postStepLocationUpdateAPICALL, postEventLocationUpdateAPICALL, postEventDateTimeUpdateAPICALL, postDeleteEventAPICALL, getEventFullData, postEventUpdateAPICALL, getParticipantsDataAPICall, postRemoveUserFromParticipantsAPICALL, postAddUserToParticipantsOfEventAPICALL, postRemoveUserFromFullyCompletedAPICALL, postAddUserToFullyCompletedOfEventAPICALL, postDeleteStepAPICALL, getStepFullData, postStepUpdateAPICALL, postDeleteUserAPICALL, postAddUserToCompletionOfStepAPICALL, postRemoveUserFromCompletionOfStepAPICALL, postAddUserToScannerOfStepAPICALL, postRemoveUserFromScannerOfStepAPICALL, getStepStatisticsDataAPICALL, getUserFullData, postUserUpdateAPICALL, logout };","map":{"version":3,"sources":["/Users/IDogueto/Desktop/Repositories/emdashboarddeployed/src/utils/requests.js"],"names":["axios","getFromStorage","GLOBAL","domain","admin","users","requests","verify","token","get","params","postStepLocationUpdateAPICALL","eventID","stepID","lat","long","commonLocation","URL_READY","replace","HASHEDID","post","latitude","longitude","headers","auth","AUTH","then","res","console","log","catch","err","error","postEventLocationUpdateAPICALL","postEventDateTimeUpdateAPICALL","start","end","startDate","endDate","getStatisticsDataAPICALL","getEventStatisticsDataAPICALL","getStepStatisticsDataAPICALL","postStepCreationAPICALL","stepTitle","stepDescription","data","hashedIDEvent","hashedIDStep","getUserFullData","hashedIDUser","IDs","getEventFullData","getStepFullData","getParticipantsDataAPICall","usersIDs","dataJSON","JSON","parse","stringify","postEventCreationAPICALL","eventTitle","eventDescription","maxParticipants","isOrdered","organizer","adminID","EVENTTITLE","eventTitleCreated","hashedIDEventCreated","postUserUpdateAPICALL","userHashedID","firstName","lastName","email","phoneNumber","gender","status","postEventUpdateAPICALL","eventHashedID","adminAUIID","eventTitleUpdated","hashedIDEventUpdated","postStepUpdateAPICALL","stepHashedID","hashedIDStepUpdated","postRemoveUserFromParticipantsAPICALL","hashedID","postRemoveUserFromCompletionOfStepAPICALL","postRemoveUserFromScannerOfStepAPICALL","postRemoveUserFromFullyCompletedAPICALL","postAddUserToParticipantsOfEventAPICALL","auiID","postAddUserToCompletionOfStepAPICALL","postAddUserToScannerOfStepAPICALL","postAddUserToFullyCompletedOfEventAPICALL","postDeleteEventAPICALL","postDeleteUserAPICALL","postDeleteStepAPICALL","getTableData","object","find","getStepsListData","postTableData","values","test","updateTableData","attribute","value","put","deleteTableData","body","delete","Object","assign","getUser","logout","POST_SIGNOUT"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {getFromStorage} from './storage';\nimport GLOBAL from './global';\n\n\n// const domain = 'http://fye-em.aui.ma/';\nconst domain = 'http://fye-em.aui.ma/';\nconst admin = 'http://localhost:8080/admin/';\nconst users = 'http://localhost:8080/users/';\n\nconst requests = {\n    \"GET_USERS_DATA\" : domain + \":hashedID/users\",\n    \"GET_ADMINS_DATA\" : domain + \":hashedID/admins\",\n    \"GET_EVENTS_DATA\" : domain + \":hashedID/events\",\n    \"GET_STEPS_DATA\" : domain + \":hashedID/steps\",\n    \"POST_SIGNOUT\" : domain + \"signout\",\n    \"GET_STATISTICS_DATA\": domain + \":hashedID/statistics\",\n    \"GET_EVENT_STATISTICS_DATA\": domain + \":hashedID/events/:eventHashedID/event-statistics\",\n    \"GET_STEP_STATISTICS_DATA\": domain + \":hashedID/events/:eventHashedID/steps/:stepHashedID/step-statistics\",\n    \"POST_CREATE_EVENT\": domain + \"events/:hashedID/events/create\",\n    \"POST_CREATE_STEP\": domain + \"steps/:hashedID/events/:eventHashedID/steps/create\",\n    \"POST_SET_LOCATION_STEP\": domain + \"steps/:hashedID/events/:eventHashedID/steps/:stepHashedID/addLocation\",\n    \"POST_SET_LOCATION_EVENT\": domain + \"events/:hashedID/events/:eventHashedID/add-location\",\n    \"POST_SET_TIME_EVENT\": domain + \"events/:hashedID/events/:eventHashedID/add-date-time\",\n    \"GET_EVENT_STEPS_LIST\": domain + \"steps/:hashedID/events/:eventHashedID/steps/data\",\n    \"GET_EVENT_FULL_DATA\": domain + \"events/:hashedID/event/:eventHashedID/full-data\",\n    \"GET_USER_FULL_DATA\": domain + \"accounts/:hashedID/user/data\",\n    \"GET_STEP_FULL_DATA\": domain + \"steps/:hashedID/event/:eventHashedID/step/:stepHashedID/full-data\",\n    \"POST_UPDATE_USER\": domain + \"accounts/:hashedID/users/:userHashedID/update\",\n    \"POST_UPDATE_EVENT\": domain + \"events/:hashedID/events/:eventHashedID/update\",\n    \"POST_UPDATE_STEP\": domain + \"steps/:hashedID/events/:eventHashedID/steps/:stepHashedID/update\",\n    \"POST_DELETE_EVENT\": domain + \"events/:hashedID/events/:eventHashedID/delete\",\n    \"POST_DELETE_USER\": domain + \"accounts/:hashedID/users/:userHashedID/delete\",\n    \"POST_DELETE_STEP\": domain + \"steps/:hashedID/events/:eventHashedID/steps/:stepHashedID/delete\",\n    \"GET_USERS_PARTICIPANTS_DATA\": domain + \"accounts/:hashedID/users/data\",\n    \"POST_REMOVE_USER_FROM_PARTICIPANTS\": domain + \"events/:hashedID/event/:eventHashedID/remove/participant\",\n    \"POST_REMOVE_USER_FROM_FULLY_COMPLETED\": domain + \"events/:hashedID/event/:eventHashedID/remove/fully-completed\",\n    \"POST_REMOVE_USER_FROM_COMPLETION_OF_STEP\": domain + \"steps/:hashedID/event/:eventHashedID/step/:stepHashedID/remove/completed\",\n    \"POST_REMOVE_USER_FROM_SCANNER_OF_STEP\": domain + \"steps/:hashedID/events/:eventHashedID/steps/:stepHashedID/privilege/scanner/remove\",\n    \"POST_ADD_USER_TO_PARTICIPANTS\": domain + \"events/admin/:hashedID/event/:eventHashedID/join\",\n    \"POST_ADD_USER_TO_COMPLETION_OF_STEP\": domain + \"steps/:hashedID/events/:eventHashedID/steps/:stepHashedID/user/aui/:auiID/complete\",\n    \"POST_ADD_USER_TO_SCANNER_OF_STEP\": domain + \"steps/:hashedID/events/:eventHashedID/steps/:stepHashedID/privilege/scanner/:hashedIDScanner\",\n    \"POST_ADD_USER_TO_FULLY_COMPLETED\": domain + \"events/admin/:hashedID/event/:eventHashedID/leave\",\n};\n\nfunction verify(token) {\n  return axios.get(users+'verify',{\n    params:{\n      token: token\n    }\n  })\n}\nfunction postStepLocationUpdateAPICALL(eventID, stepID, lat, long, commonLocation){\n    let URL_READY = requests[\"POST_SET_LOCATION_STEP\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",eventID);\n    URL_READY = URL_READY.replace(\":stepHashedID\",stepID);\n    return axios.post(URL_READY,{\n        latitude: lat,\n        longitude: long,\n        commonLocation: commonLocation\n    },{headers: {\n            auth: GLOBAL.AUTH\n        }})\n        .then((res) => {\n            console.log(res);\n            return true;\n\n        }).catch((err) => {\n            console.error(err)\n            return false;\n        });\n}\nfunction postEventLocationUpdateAPICALL(eventID, lat, long, commonLocation){\n    let URL_READY = requests[\"POST_SET_LOCATION_EVENT\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",eventID);\n    return axios.post(URL_READY,{\n        latitude: lat,\n        longitude: long,\n        commonLocation: commonLocation\n    },{headers: {\n            auth: GLOBAL.AUTH\n        }})\n        .then((res) => {\n            console.log(res);\n            return true;\n\n        }).catch((err) => {\n            console.error(err);\n            return false;\n        });\n}\nfunction postEventDateTimeUpdateAPICALL(eventID, start, end){\n\n    console.log(\"eventID:\")\n    console.log(eventID);\n    let URL_READY = requests[\"POST_SET_TIME_EVENT\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",eventID);\n    console.log(URL_READY);\n    console.log(start);\n    console.log(end);\n    return axios.post(URL_READY,{\n        startDate: start,\n        endDate: end\n    },{headers: {\n            auth: GLOBAL.AUTH\n        }})\n        .then((res) => {\n            console.log(res);\n            return true;\n\n        }).catch((err) => {\n            console.error(err);\n            return false;\n        });\n}\nfunction getStatisticsDataAPICALL(){\n     let URL_READY = requests[\"GET_STATISTICS_DATA\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n  return axios.get(URL_READY,{\n    headers: {\n      auth: GLOBAL.AUTH\n    },\n     params:{\n     }\n   })\n}\nfunction getEventStatisticsDataAPICALL(eventID){\n    let URL_READY = requests[\"GET_EVENT_STATISTICS_DATA\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",eventID);\n\n    console.log(URL_READY);\n    return axios.get(URL_READY,{\n        headers: {\n            auth: GLOBAL.AUTH\n        },\n        params:{\n        }\n    })\n}\nfunction getStepStatisticsDataAPICALL(eventID, stepID){\n    let URL_READY = requests[\"GET_STEP_STATISTICS_DATA\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",eventID);\n    URL_READY = URL_READY.replace(\":stepHashedID\",stepID);\n\n    console.log(URL_READY);\n    return axios.get(URL_READY,{\n        headers: {\n            auth: GLOBAL.AUTH\n        },\n        params:{\n        }\n    })\n}\nfunction postStepCreationAPICALL(eventID, stepTitle, stepDescription){\n    let URL_READY = requests[\"POST_CREATE_STEP\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",eventID);\n    console.log(URL_READY);\n    console.log(eventID);\n    console.log(stepTitle);\n    console.log(stepDescription);\n    return axios.post(URL_READY,{\n        stepTitle: stepTitle,\n        stepDescription: stepDescription\n    },{headers: {\n            auth: GLOBAL.AUTH\n        }})\n        .then((res) => {\n            return {eventID: res.data.data.hashedIDEvent, stepID: res.data.data.hashedIDStep};\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction getUserFullData(hashedIDUser){\n    let URL_READY = requests[\"GET_USER_FULL_DATA\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n\n    console.log(URL_READY);\n    return axios.post(URL_READY\n        ,{\n            IDs: hashedIDUser\n        },{headers: {\n                auth: GLOBAL.AUTH\n            }})\n        .then((res) => {\n            return res;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction getEventFullData(eventID){\n    let URL_READY = requests[\"GET_EVENT_FULL_DATA\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",eventID);\n    console.log(URL_READY);\n    return axios.get(URL_READY\n        ,{headers: {\n                auth: GLOBAL.AUTH\n            }})\n        .then((res) => {\n            return res;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction getStepFullData(eventID, stepID){\n    let URL_READY = requests[\"GET_STEP_FULL_DATA\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",eventID);\n    URL_READY = URL_READY.replace(\":stepHashedID\",stepID);\n\n    console.log(URL_READY);\n    return axios.get(URL_READY\n        ,{headers: {\n                auth: GLOBAL.AUTH\n            }})\n        .then((res) => {\n            return res;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction getParticipantsDataAPICall(usersIDs){\n    let URL_READY = requests[\"GET_USERS_PARTICIPANTS_DATA\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    console.log(URL_READY);\n    console.log(\"usersIDs\");\n    console.log(usersIDs);\n    let dataJSON = JSON.parse(JSON.stringify( usersIDs ));\n    return axios.post(URL_READY,{\n            IDs: dataJSON\n        }\n        ,{headers: {\n                auth: GLOBAL.AUTH\n            }})\n        .then((res) => {\n            console.log(res.data);\n            return res.data;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction postEventCreationAPICALL(eventTitle, eventDescription, maxParticipants, isOrdered, organizer){\n     let URL_READY = requests[\"POST_CREATE_EVENT\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    // console.log(URL_READY);\n    // console.log(\"adminID:\"+ GLOBAL.HASHEDID + \",\" +\n    //     \"eventTitle:\" + eventTitle + \",\" +\n    //     \"eventDescription:\" + eventDescription + \",\" +\n    //     \"maxParticipants:\" + maxParticipants + \",\" +\n    //     \"isOrdered:\" + isOrdered + \",\" +\n    //     \"organizer:\" +  organizer)\n    return axios.post(URL_READY,{\n            adminID: GLOBAL.HASHEDID,\n            eventTitle: eventTitle,\n            eventDescription: eventDescription,\n            maxParticipants: maxParticipants,\n            isOrdered: isOrdered,\n            organizer: organizer\n   },{headers: {\n     auth: GLOBAL.AUTH\n   }})\n    .then((res) => {\n        console.log(res);\n        GLOBAL.EVENTTITLE = res.data.data.eventTitleCreated;\n        return res.data.data.hashedIDEventCreated;\n        \n    }).catch((err) => {\n      console.error(err)\n    });\n}\nfunction postUserUpdateAPICALL(userHashedID, firstName, lastName, email, phoneNumber, gender){\n    let URL_READY = requests[\"POST_UPDATE_USER\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":userHashedID\",userHashedID);\n    console.log(URL_READY);\n    console.log(\"firstName:\" +firstName+\n        \"lastName:\" +lastName+\n        \"email:\" +email+\n        \"phoneNumber:\" +phoneNumber+\n        \"gender:\" +gender);\n    return axios.post(URL_READY,{\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        phoneNumber: phoneNumber,\n        gender: gender\n    },{headers: {\n            auth: GLOBAL.AUTH\n        }})\n        .then((res) => {\n            console.log(\"RESULT HERE:\");\n            console.log(res);\n\n            return (res.data.status===\"success\")?true:false;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction postEventUpdateAPICALL(eventHashedID, adminAUIID, eventTitle, eventDescription, maxParticipants, organizer){\n    let URL_READY = requests[\"POST_UPDATE_EVENT\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",eventHashedID);\n    console.log(URL_READY);\n\n    return axios.post(URL_READY,{\n        adminAUIID: adminAUIID,\n        eventTitle: eventTitle,\n        eventDescription: eventDescription,\n        maxParticipants: maxParticipants,\n        organizer: organizer\n    },{headers: {\n            auth: GLOBAL.AUTH\n        }})\n        .then((res) => {\n            console.log(\"RESULT HERE:\");\n            console.log(res);\n            GLOBAL.EVENTTITLE = res.data.data.eventTitleUpdated;\n            return res.data.data.hashedIDEventUpdated;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction postStepUpdateAPICALL(eventHashedID, stepHashedID, stepTitle, stepDescription){\n    let URL_READY = requests[\"POST_UPDATE_STEP\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\", eventHashedID);\n    URL_READY = URL_READY.replace(\":stepHashedID\", stepHashedID);\n    console.log(URL_READY);\n\n    return axios.post(URL_READY,{\n        stepTitle: stepTitle,\n        stepDescription: stepDescription,\n    },{headers: {\n            auth: GLOBAL.AUTH\n        }})\n        .then((res) => {\n            console.log(\"RESULT HERE:\");\n            console.log(res);\n            return res.data.data.hashedIDStepUpdated;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction postRemoveUserFromParticipantsAPICALL(hashedIDEvent, hashedID){\n    let URL_READY = requests[\"POST_REMOVE_USER_FROM_PARTICIPANTS\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",hashedIDEvent);\n    console.log(URL_READY);\n    return axios.post(URL_READY,{\n            hashedID: hashedID\n        }\n        ,{headers: {\n                auth: GLOBAL.AUTH\n            }})\n        .then((res) => {\n            console.log(res.data.status);\n            return (res.data.status===\"success\")?true:false;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction postRemoveUserFromCompletionOfStepAPICALL(hashedIDEvent, hashedIDStep, hashedID){\n    let URL_READY = requests[\"POST_REMOVE_USER_FROM_COMPLETION_OF_STEP\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",hashedIDEvent);\n    URL_READY = URL_READY.replace(\":stepHashedID\",hashedIDStep);\n    console.log(URL_READY);\n    return axios.post(URL_READY,{\n            hashedID: hashedID\n        }\n        ,{headers: {\n                auth: GLOBAL.AUTH\n            }})\n        .then((res) => {\n            console.log(res.data.status);\n            return (res.data.status===\"success\")?true:false;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction postRemoveUserFromScannerOfStepAPICALL(hashedIDEvent, hashedIDStep, hashedID){\n    let URL_READY = requests[\"POST_REMOVE_USER_FROM_SCANNER_OF_STEP\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",hashedIDEvent);\n    URL_READY = URL_READY.replace(\":stepHashedID\",hashedIDStep);\n    console.log(URL_READY);\n    return axios.post(URL_READY,{\n            hashedID: hashedID\n        }\n        ,{headers: {\n                auth: GLOBAL.AUTH\n            }})\n        .then((res) => {\n            console.log(res.data.status);\n            return (res.data.status===\"success\")?true:false;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction postRemoveUserFromFullyCompletedAPICALL(hashedIDEvent, hashedID){\n    let URL_READY = requests[\"POST_REMOVE_USER_FROM_FULLY_COMPLETED\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",hashedIDEvent);\n    console.log(URL_READY);\n    return axios.post(URL_READY,{\n            hashedID: hashedID\n        }\n        ,{headers: {\n                auth: GLOBAL.AUTH\n            }})\n        .then((res) => {\n            console.log(res.data.status);\n            return (res.data.status===\"success\")?true:false;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction postAddUserToParticipantsOfEventAPICALL(hashedIDEvent, auiID){\n    let URL_READY = requests[\"POST_ADD_USER_TO_PARTICIPANTS\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",hashedIDEvent);\n    console.log(\"auiID: \" + auiID);\n    console.log(URL_READY);\n    return axios.post(URL_READY,{\n            auiID: auiID\n        }\n        ,{headers: {\n                auth: GLOBAL.AUTH\n            }})\n        .then((res) => {\n            console.log(res.data.status);\n            return res;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction postAddUserToCompletionOfStepAPICALL(hashedIDEvent, hashedIDStep, auiID){\n    let URL_READY = requests[\"POST_ADD_USER_TO_COMPLETION_OF_STEP\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",hashedIDEvent);\n    URL_READY = URL_READY.replace(\":stepHashedID\",hashedIDStep);\n    URL_READY = URL_READY.replace(\":auiID\",auiID);\n\n    console.log(\"auiID: \" + auiID);\n    console.log(URL_READY);\n    return axios.get(URL_READY,{\n        headers: {\n            auth: GLOBAL.AUTH\n        },\n        params:{\n        }})\n        .then((res) => {\n            console.log(res.data.status);\n            return res;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction postAddUserToScannerOfStepAPICALL(hashedIDEvent, hashedIDStep, auiID){\n    let URL_READY = requests[\"POST_ADD_USER_TO_SCANNER_OF_STEP\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",hashedIDEvent);\n    URL_READY = URL_READY.replace(\":stepHashedID\",hashedIDStep);\n    URL_READY = URL_READY.replace(\":hashedIDScanner\",auiID);\n\n    console.log(\"auiID: \" + auiID);\n    console.log(URL_READY);\n    return axios.get(URL_READY,{\n        headers: {\n            auth: GLOBAL.AUTH\n        },\n        params:{\n        }})\n        .then((res) => {\n            console.log(res.data.status);\n            return res;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction postAddUserToFullyCompletedOfEventAPICALL(hashedIDEvent, auiID){\n    let URL_READY = requests[\"POST_ADD_USER_TO_FULLY_COMPLETED\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",hashedIDEvent);\n    console.log(\"auiID: \" + auiID);\n    console.log(URL_READY);\n    return axios.post(URL_READY,{\n            auiID: auiID\n        }\n        ,{headers: {\n                auth: GLOBAL.AUTH\n            }})\n        .then((res) => {\n            console.log(res.data.status);\n            return res;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction postDeleteEventAPICALL(eventID){\n    let URL_READY = requests[\"POST_DELETE_EVENT\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",eventID);\n    console.log(URL_READY);\n    return axios.post(URL_READY,{}\n        ,{headers: {\n                auth: GLOBAL.AUTH\n            }})\n        .then((res) => {\n            console.log(res);\n            return (res.data.status===\"success\")?true:false;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction postDeleteUserAPICALL(auiID){\n    let URL_READY = requests[\"POST_DELETE_USER\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":userHashedID\",auiID);\n    console.log(URL_READY);\n    return axios.post(URL_READY,{}\n        ,{headers: {\n                auth: GLOBAL.AUTH\n            }})\n        .then((res) => {\n            console.log(res);\n            return (res.data.status===\"success\")?true:false;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\nfunction postDeleteStepAPICALL(eventID, stepID){\n    let URL_READY = requests[\"POST_DELETE_STEP\"].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",eventID);\n    URL_READY = URL_READY.replace(\":stepHashedID\",stepID);\n\n    console.log(URL_READY);\n    return axios.post(URL_READY,{}\n        ,{headers: {\n                auth: GLOBAL.AUTH\n            }})\n        .then((res) => {\n            console.log(res);\n            return (res.data.status===\"success\")?true:false;\n\n        }).catch((err) => {\n            console.error(err)\n        });\n}\n\nfunction getTableData(object,find){\n    let URL_READY = requests[object].replace(\":hashedID\",GLOBAL.HASHEDID);\n    console.log(URL_READY);\n    return axios.get(URL_READY,{\n        headers: {\n            auth: GLOBAL.AUTH\n        },\n        params:{\n        }\n    })\n}\n\nfunction getStepsListData(object,eventHashedID){\n    let URL_READY = requests[object].replace(\":hashedID\",GLOBAL.HASHEDID);\n    URL_READY = URL_READY.replace(\":eventHashedID\",eventHashedID);\n    return axios.get(URL_READY,{\n        headers: {\n            auth: GLOBAL.AUTH\n        },\n        params:{\n        }\n    })\n}\n\nfunction postTableData(object, values){\n   return axios.post(admin+'table',{\n     test: 'test',\n     object: object,\n     data: values\n   },{headers: {\n     auth: GLOBAL.AUTH\n   }})\n }\n\nfunction updateTableData(object,attribute,value,values){\n   return axios.put(admin+'table',{\n       object: object,\n       attribute: attribute,\n       value: value,\n       data: values\n   },{\n      headers: {\n        token: getFromStorage(\"token\")\n      }\n    }\n  )\n}\n\nfunction deleteTableData(body){\n  console.log('calling delete');\n  return axios.delete(admin+'table',Object.assign(\n    body,\n    {\n      headers: {\n        token: getFromStorage(\"token\")\n      }\n    }\n  ))\n}\n\nfunction getUser(){\n  return axios.get(users+'current',{\n    params: {\n      token: getFromStorage(\"token\")\n    }\n  })\n}\n\nfunction logout(){\n  return axios.post(requests.POST_SIGNOUT,{},\n    {\n      headers: {\n        auth: GLOBAL.AUTH\n   }});\n\n}\n\nexport {verify, getTableData, postTableData, getStepsListData, updateTableData, deleteTableData, getUser, getEventStatisticsDataAPICALL, getStatisticsDataAPICALL, postEventCreationAPICALL, postStepCreationAPICALL,postStepLocationUpdateAPICALL, postEventLocationUpdateAPICALL, postEventDateTimeUpdateAPICALL, postDeleteEventAPICALL, getEventFullData, postEventUpdateAPICALL, getParticipantsDataAPICall, postRemoveUserFromParticipantsAPICALL, postAddUserToParticipantsOfEventAPICALL, postRemoveUserFromFullyCompletedAPICALL, postAddUserToFullyCompletedOfEventAPICALL, postDeleteStepAPICALL, getStepFullData, postStepUpdateAPICALL, postDeleteUserAPICALL, postAddUserToCompletionOfStepAPICALL, postRemoveUserFromCompletionOfStepAPICALL, postAddUserToScannerOfStepAPICALL, postRemoveUserFromScannerOfStepAPICALL, getStepStatisticsDataAPICALL, getUserFullData, postUserUpdateAPICALL, logout}\n"]},"metadata":{},"sourceType":"module"}